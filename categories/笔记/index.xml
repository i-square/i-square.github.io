<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>笔记 on 平方君的后花园</title><link>https://i-square.github.io/categories/%E7%AC%94%E8%AE%B0/</link><description>Recent content in 笔记 on 平方君的后花园</description><generator>Hugo -- gohugo.io</generator><language>zh-Hans</language><lastBuildDate>Mon, 17 Oct 2022 20:43:45 +0800</lastBuildDate><atom:link href="https://i-square.github.io/categories/%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml"/><item><title>升级MacOS12.x(Monterey)后sudo无法使用问题及解决方式</title><link>https://i-square.github.io/p/Problem-and-solution-of-sudo-unavailability-after-upgrading-to-MacOS12.xMonterey/</link><pubDate>Mon, 17 Oct 2022 20:43:45 +0800</pubDate><guid>https://i-square.github.io/p/Problem-and-solution-of-sudo-unavailability-after-upgrading-to-MacOS12.xMonterey/</guid><description>&lt;img src="https://i-square.github.io/p/Problem-and-solution-of-sudo-unavailability-after-upgrading-to-MacOS12.xMonterey/macOS-Monterey-on-MBP-Feature.webp" alt="Featured image of post 升级MacOS12.x(Monterey)后sudo无法使用问题及解决方式" />&lt;h2 id="问题">问题&lt;/h2>
&lt;p>升级到 MacOS Monterey 以后会强行恢复 sudoers 文件到默认状态，即使用户在 admin 组里也无法使用 sudo&lt;/p>
&lt;p>当然，此时也是无法修改 sudoers 文件的&lt;/p>
&lt;h2 id="过程">过程&lt;/h2>
&lt;p>在谷歌搜索了一下，果然已经有人遇到了类似问题，在解决过程中参考了外网的3篇帖子&lt;/p>
&lt;h3 id="尝试">尝试&lt;/h3>
&lt;p>首先找到了这篇帖子： &lt;a class="link" href="https://www.reddit.com/r/MacOS/comments/rd0w69/upgraded_to_monterey_1201_now_user_not_in_sudoers/" target="_blank" rel="noopener"
>r/MacOS&lt;/a>，虽然没有解决问题，但从中学到了从Finder里直接拷贝系统文件的方法，需要权限时会弹框确认（指纹or密码）&lt;/p>
&lt;ol>
&lt;li>&lt;code>SHIFT + CMD + .&lt;/code> 显示隐藏文件&lt;/li>
&lt;li>拷贝 &lt;code>/etc/sudoers&lt;/code> 文件到可编辑目录&lt;/li>
&lt;li>修改文件，加入我的用户（比如user）和免密设置，如下&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">##&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># User specification&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">root &lt;span class="nv">ALL&lt;/span>&lt;span class="o">=(&lt;/span>ALL:ALL&lt;span class="o">)&lt;/span> ALL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">user &lt;span class="nv">ALL&lt;/span>&lt;span class="o">=(&lt;/span>ALL:ALL&lt;span class="o">)&lt;/span> NOPASSWD:ALL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">##&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>再从 Finder 里直接拷贝修改后的问题替换原文件&lt;/li>
&lt;li>此时执行 sudo 命令仍然会报错 &lt;code>sudo: /etc/sudoers is owned by uid xxx, should be 0&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="解决uid问题">解决uid问题&lt;/h3>
&lt;p>之后又在 &lt;a class="link" href="https://apple.stackexchange.com/questions/157772/sudo-etc-sudoers-is-owned-by-uid-501-should-be-0" target="_blank" rel="noopener"
>StackExchange&lt;/a> 里学到了两种方式解决这个问题：&lt;/p>
&lt;ol>
&lt;li>开机按 &lt;code>CMD + S&lt;/code> 进入 recovery 模式，以root权限执行如下命令后，即可解决&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mount -uw /
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chown root:wheel /etc/sudoers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod &lt;span class="m">440&lt;/span> /etc/sudoers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">reboot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>利用 Apple Script 修改文件权限，弹框确认权限（指纹or密码）&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">osascript -e &lt;span class="s1">&amp;#39;do shell script &amp;#34;chown root:wheel /etc/sudoers; chmod 440 /etc/sudoers; chmod -N /etc/sudoers&amp;#34; with administrator privileges&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="后记">后记&lt;/h2>
&lt;p>事实上，完全可以直接用Apple Script修改 &lt;code>/etc/sudoers&lt;/code> 文件，比如 &lt;a class="link" href="https://dev.to/rezende79/user-is-not-in-the-sudoers-file-after-monterey-upgrade-3e4p" target="_blank" rel="noopener"
>这篇文章&lt;/a> 里提到的方式&lt;/p>
&lt;p>创建一个 &lt;code>/tmp/sudoers&lt;/code> 文件，按需修改，然后直接替换 &lt;code>/etc/sudoers&lt;/code> 文件即可，如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">osascript -e &lt;span class="s1">&amp;#39;do shell script &amp;#34;cat /tmp/sudoers &amp;gt; /etc/sudoers; chown root:wheel /etc/sudoers&amp;#34; with administrator privileges&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>高效冲浪指北</title><link>https://i-square.github.io/p/Guide-to-Efficient-Surfing/</link><pubDate>Thu, 25 Aug 2022 17:55:27 +0800</pubDate><guid>https://i-square.github.io/p/Guide-to-Efficient-Surfing/</guid><description>&lt;img src="https://i-square.github.io/p/Guide-to-Efficient-Surfing/wave-riding.svg" alt="Featured image of post 高效冲浪指北" />&lt;h2 id="引言">引言&lt;/h2>
&lt;h3 id="分享内容">分享内容&lt;/h3>
&lt;ul>
&lt;li>工具推荐&lt;/li>
&lt;li>方法分享&lt;/li>
&lt;li>开拓思路&lt;/li>
&lt;/ul>
&lt;h3 id="如何高效">如何高效？&lt;/h3>
&lt;ul>
&lt;li>聚焦：摒除杂质&lt;/li>
&lt;li>有序：有条不紊&lt;/li>
&lt;li>简化：化繁为简&lt;/li>
&lt;/ul>
&lt;h2 id="浏览器">浏览器&lt;/h2>
&lt;h3 id="发展史">发展史&lt;/h3>
&lt;h4 id="内核">内核&lt;/h4>
&lt;ul>
&lt;li>Trident（IE） -&amp;gt; EdgeHTML（早期edge）&lt;/li>
&lt;li>KHTML -&amp;gt; WebKit （早期Safari）&lt;/li>
&lt;li>↘ Chromium（早期chrome）-&amp;gt; Blink（后期chrome等）&lt;/li>
&lt;li>↘ WebKit2（后期Safari）&lt;/li>
&lt;li>Gecko（早期firefox） -&amp;gt; Servo&lt;/li>
&lt;li>Presto（早期opera）&lt;/li>
&lt;/ul>
&lt;h4 id="浏览器大战">浏览器大战&lt;/h4>
&lt;ul>
&lt;li>第一次大战：垄断之战
&lt;ul>
&lt;li>Netscape Navigator&lt;/li>
&lt;li>Internet Explorer&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>第二次大战：标准之战
&lt;ul>
&lt;li>IE&lt;/li>
&lt;li>Opera&lt;/li>
&lt;li>Firefox&lt;/li>
&lt;li>Safari&lt;/li>
&lt;li>Chrome&lt;/li>
&lt;li>Maxthon&lt;/li>
&lt;li>Edge&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="扩展">扩展&lt;/h3>
&lt;h3 id="广告过滤">广告过滤&lt;/h3>
&lt;ul>
&lt;li>Adblock Plus/AdBlock&lt;/li>
&lt;li>uBlock Origin&lt;/li>
&lt;/ul>
&lt;h3 id="脚本管理">脚本管理&lt;/h3>
&lt;ul>
&lt;li>Greasemonkey&lt;/li>
&lt;li>Violentmonkey&lt;/li>
&lt;li>Tampermonkey&lt;/li>
&lt;/ul>
&lt;h3 id="网络代理">网络代理&lt;/h3>
&lt;ul>
&lt;li>AutoProxy&lt;/li>
&lt;li>SwitchyOmega&lt;/li>
&lt;/ul>
&lt;h3 id="键盘导航">键盘导航&lt;/h3>
&lt;ul>
&lt;li>Vimium&lt;/li>
&lt;li>Surfingkeys&lt;/li>
&lt;/ul>
&lt;h2 id="实用工具">实用工具&lt;/h2>
&lt;h3 id="全局广告过滤">全局广告过滤&lt;/h3>
&lt;h4 id="路由器openwrt">路由器(OpenWrt)&lt;/h4>
&lt;ul>
&lt;li>Adbyby&lt;/li>
&lt;li>KoolProxy&lt;/li>
&lt;/ul>
&lt;h4 id="桌面端">桌面端&lt;/h4>
&lt;ul>
&lt;li>hosts&lt;/li>
&lt;li>AdGuard&lt;/li>
&lt;/ul>
&lt;h3 id="全局代理管理">全局代理管理&lt;/h3>
&lt;ul>
&lt;li>系统代理&lt;/li>
&lt;li>Proxifier&lt;/li>
&lt;/ul>
&lt;h3 id="全局手势">全局手势&lt;/h3>
&lt;h4 id="鼠标手势">鼠标手势&lt;/h4>
&lt;ul>
&lt;li>Win：WGestures/StrokesPlus&lt;/li>
&lt;li>Ubuntu：EasyStroke&lt;/li>
&lt;/ul>
&lt;h4 id="触摸板手势">触摸板手势&lt;/h4>
&lt;ul>
&lt;li>Win：GestureSign&lt;/li>
&lt;li>Mac：Jitouch&lt;/li>
&lt;/ul>
&lt;h3 id="多任务管理">多任务管理&lt;/h3>
&lt;ul>
&lt;li>单机：多桌面+单桌面任务聚焦&lt;/li>
&lt;li>多机
&lt;ul>
&lt;li>原则：扬长避短&lt;/li>
&lt;li>VSCode Remote、虚拟机、远程桌面&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="终端">终端&lt;/h2>
&lt;h4 id="模拟器">模拟器&lt;/h4>
&lt;ul>
&lt;li>Win：XShell/SecureCRT&lt;/li>
&lt;li>Mac：iTerm2
&lt;ul>
&lt;li>会话管理&lt;/li>
&lt;li>脚本管理&lt;/li>
&lt;li>分屏（显示共用，多终端）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="zsh">zsh&lt;/h4>
&lt;ul>
&lt;li>配置：oh my zsh&lt;/li>
&lt;li>主题：powerlevel10k&lt;/li>
&lt;/ul>
&lt;h4 id="tmux">tmux&lt;/h4>
&lt;ul>
&lt;li>终端复用&lt;/li>
&lt;li>Tmux Plugin Manager
&lt;ul>
&lt;li>会话恢复：tmux-resurrect&lt;/li>
&lt;li>会话保存：tmux-continuum&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="docker">docker&lt;/h4>
&lt;ul>
&lt;li>环境隔离&lt;/li>
&lt;li>轻量化&lt;/li>
&lt;li>微服务&lt;/li>
&lt;li>k8s&lt;/li>
&lt;/ul>
&lt;h4 id="shell脚本">shell脚本&lt;/h4>
&lt;ul>
&lt;li>grep&lt;/li>
&lt;li>awk&lt;/li>
&lt;li>sed&lt;/li>
&lt;/ul></description></item><item><title>使用expect脚本一键登录跳板机</title><link>https://i-square.github.io/p/login-to-the-springboard-machine-easily-by-expect-script/</link><pubDate>Fri, 18 Mar 2022 17:34:07 +0800</pubDate><guid>https://i-square.github.io/p/login-to-the-springboard-machine-easily-by-expect-script/</guid><description>&lt;img src="https://i-square.github.io/p/login-to-the-springboard-machine-easily-by-expect-script/login.svg" alt="Featured image of post 使用expect脚本一键登录跳板机" />&lt;h2 id="背景">背景&lt;/h2>
&lt;p>为了安全，多数公司会采用跳板机的方式访问内网服务器，登录需要输入AD密码和谷歌验证码，非常繁琐，这里提供一个基于expect脚本的方法，实现一键登录跳板机&lt;/p>
&lt;blockquote>
&lt;p>注：笔者在 MacOS 和 Ubuntu20.04 环境下测试ok，其他环境大同小异，按需修改即可。&lt;/p>
&lt;/blockquote>
&lt;h2 id="方法">方法&lt;/h2>
&lt;p>此方式思路是利用expect脚本交互式输入预设的AD密码，输入实时获取的谷歌验证码（使用 python authenticator 工具）&lt;/p>
&lt;h3 id="所需依赖">所需依赖&lt;/h3>
&lt;p>安装以下工具，各平台安装方法请自行搜索：&lt;/p>
&lt;ul>
&lt;li>expect&lt;/li>
&lt;li>python&lt;/li>
&lt;li>pip&lt;/li>
&lt;li>authenticator&lt;/li>
&lt;/ul>
&lt;h2 id="authenticator配置">authenticator配置&lt;/h2>
&lt;h3 id="安装">安装&lt;/h3>
&lt;p>&lt;code>pip install authenticator&lt;/code> 若不成功，请先升级pip到最新版本&lt;/p>
&lt;h3 id="配置">配置&lt;/h3>
&lt;ol>
&lt;li>执行 &lt;code>authenticator add $user&lt;/code>（AD账号无邮箱后缀）&lt;/li>
&lt;li>提示 &lt;code>Enter passphrase&lt;/code> 这里输入2次AD密码&lt;/li>
&lt;li>提示 &lt;code>Enter shared secret&lt;/code> 需要把谷歌验证码的字符串输入到这里&lt;/li>
&lt;li>到这里就配置ok了，执行 &lt;code>authenticator generate&lt;/code> ，输入AD密码，看到谷歌验证码正常输出就是成功了&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>配置完成之后就可以使用expect脚本来自动登录了&lt;/p>
&lt;/blockquote>
&lt;h3 id="注意点">注意点&lt;/h3>
&lt;p>多数公司的AD密码可能需要每隔一段时间更新一次，在更新AD密码后，使用 &lt;code>authenticator&lt;/code> 仍然需要输入旧密码，所以下述脚本内相应的做了一下兼容&lt;/p>
&lt;h2 id="expect脚本">expect脚本&lt;/h2>
&lt;h3 id="脚本">脚本&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/usr/bin/expect
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> timeout &lt;span class="m">1000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> USERNAME xxx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> PASSWORD_GEN xxxx &lt;span class="c1"># 首次配置 authenticator 时使用的密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> PASSWORD xxxxxxxx &lt;span class="c1"># AD密码，每隔 xx 天更新一次&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> JUMP_ZONE zone &lt;span class="c1"># 假如跳板机区分区域&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> LINK_TYPE ssh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> DOMAIN example.com &lt;span class="c1"># 登录域名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 判断是否是 vscode 云端环境&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="nv">$JUMP_ZONE&lt;/span> !&lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;vscode&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">set&lt;/span> main_response &lt;span class="s2">&amp;#34;Opt&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">set&lt;/span> main_response &lt;span class="s2">&amp;#34;Ip:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">spawn authenticator generate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">expect &lt;span class="s2">&amp;#34;passphrase:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">send &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$PASSWORD_GEN&lt;/span>&lt;span class="s2">\r&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">expect &lt;span class="s2">&amp;#34;seconds&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> found &lt;span class="o">[&lt;/span>regexp &lt;span class="o">{([&lt;/span>0-9&lt;span class="o">]{&lt;/span>6&lt;span class="o">})}&lt;/span> &lt;span class="nv">$expect_out&lt;/span>&lt;span class="o">(&lt;/span>buffer&lt;span class="o">)&lt;/span> match verify_code&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="nv">$found&lt;/span> &lt;span class="o">==&lt;/span> 1&lt;span class="o">}&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> send &lt;span class="se">\x&lt;/span>&lt;span class="m">03&lt;/span> &lt;span class="c1"># 发送 Ctrl-C 结束 authenticator 进程&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> puts &lt;span class="s2">&amp;#34;invalid verification code&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">exit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">spawn &lt;span class="si">${&lt;/span>&lt;span class="nv">LINK_TYPE&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">USERNAME&lt;/span>&lt;span class="si">}&lt;/span>@jump-&lt;span class="si">${&lt;/span>&lt;span class="nv">JUMP_ZONE&lt;/span>&lt;span class="si">}&lt;/span>.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">expect &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;yes/no&amp;#34;&lt;/span> &lt;span class="o">{&lt;/span> send &lt;span class="s2">&amp;#34;yes\r&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> exp_continue &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Verification code:&amp;#34;&lt;/span> &lt;span class="o">{&lt;/span> send &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$verify_code&lt;/span>&lt;span class="s2">\r&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> exp_continue &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;assword:&amp;#34;&lt;/span> &lt;span class="o">{&lt;/span> send &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$PASSWORD&lt;/span>&lt;span class="s2">\r&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> exp_continue &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;MFA auth&amp;#34;&lt;/span> &lt;span class="o">{&lt;/span> send &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$verify_code&lt;/span>&lt;span class="s2">\r&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> exp_continue &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">$main_response&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">interact
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="使用">使用&lt;/h3>
&lt;ol>
&lt;li>把脚本开头的几个变量设置一下，或者自己修改为从argv里读取
&lt;ul>
&lt;li>&lt;code>USERNAME&lt;/code> AD账户不带邮箱后缀&lt;/li>
&lt;li>&lt;code>PASSWORD&lt;/code> AD密码&lt;/li>
&lt;li>&lt;code>JUMP_ZONE&lt;/code> 是跳板机的区域代码，按需&lt;/li>
&lt;li>&lt;code>LINK_TYPE&lt;/code> 是连接协议，比如 &lt;code>ssh | sftp&lt;/code>，按需&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>假设保存文件为 &lt;code>~/jump_ssh.exp&lt;/code>&lt;/li>
&lt;li>执行脚本即可自动化登录到跳板机 &lt;code>expect ~/jump_ssh.exp&lt;/code>
&lt;ol>
&lt;li>也可以给脚本加上可执行权限 &lt;code>chmod a+x ~/jump_ssh.exp&lt;/code>&lt;/li>
&lt;li>然后直接执行即可 &lt;code>~/jump_ssh.exp&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol></description></item><item><title>OneDriveSetup.exe占用大量CPU的解决办法</title><link>https://i-square.github.io/p/Solution-to-the-problem-that-OneDriveSetup.exe-eat-CPU/</link><pubDate>Mon, 03 Jul 2017 22:27:29 +0000</pubDate><guid>https://i-square.github.io/p/Solution-to-the-problem-that-OneDriveSetup.exe-eat-CPU/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>从前两周开始我的实验室电脑出现了CPU占用率一直保持在25%以上的现象，经过排查发现问题出在&lt;code>OneDriveSetup.exe&lt;/code>这个进程上，然而当时我上谷歌各种搜索也没有找到解决办法，后来也就没管，但是今天无意中正好看到解决办法，在这里分享出来，希望遇到这个问题的能够尽早解决。&lt;/p>
&lt;!-- more -->
&lt;h2 id="解决">解决&lt;/h2>
&lt;p>解决办法最早是在德国微软论坛里发布的，发布时间是2017年6月26日，这里是&lt;a class="link" href="https://answers.microsoft.com/de-de/windows/forum/windows_10-performance/onedrivesetupexe-32bit-lastet-cpu-dauerhaft-mit-ca/ae516fe5-7b88-4e87-bf37-fbc94d1a7664" target="_blank" rel="noopener"
>原帖地址&lt;/a>&lt;/p>
&lt;p>以下是操作步骤：&lt;/p>
&lt;ol>
&lt;li>在任务管理器里面结束进程&lt;code>OneDriveSetup.exe&lt;/code>&lt;/li>
&lt;li>进入&lt;code>C:\Users\your username\AppData\Local\Microsoft\OneDrive\setup\logs&lt;/code>文件夹，删除以下2个文件(如果看不到这两个文件，需要先设置显示隐藏文件和显示系统文件)
&lt;ul>
&lt;li>&lt;code>UserTelemetryCache.otc&lt;/code>&lt;/li>
&lt;li>&lt;code>UserTelemetryCache.otc.session&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>删除后进入&lt;code>C:\Users\your username\AppData\Local\Microsoft\OneDrive\Update&lt;/code>文件夹运行里面的&lt;code>OneDriveSetup.exe&lt;/code>安装更新即可&lt;/li>
&lt;/ol>
&lt;p>这个时候&lt;code>OneDriveSetup.exe&lt;/code>不会在占用大量CPU，也不会一直在后台跑了，enjoy&lt;/p></description></item><item><title>MFC+BCG库静态链接方法总结</title><link>https://i-square.github.io/p/Summary-of-MFC-BCG-library-static-link-method/</link><pubDate>Mon, 19 Jun 2017 22:24:59 +0000</pubDate><guid>https://i-square.github.io/p/Summary-of-MFC-BCG-library-static-link-method/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>最近在做一个MFC项目，使用了有名的BCG界面库，我的编程平台是 &lt;code>Win10 + VS2015&lt;/code> , 在我自己的机器上测试的时候一直都是使用动态链接的方式，没有什么问题，但是当切换到 &lt;code>Windows Server 2008 R2&lt;/code> 系统下，会出现缺少 &lt;code>xxx.dll&lt;/code> 的错误，按照往常的做法，缺少的文件也就是VC的运行库，然而我安装VS2015的运行库却失败了，网上一查才发现VS2015的运行时库不支持 &lt;code>Windows Server 2008 R2&lt;/code> ，最低得是 &lt;code>Windows Server 2008 R2 with SP1&lt;/code> ，安装运行库的法子走不通，只能换一条路了。&lt;/p>
&lt;!-- more -->
&lt;h2 id="静态链接">静态链接&lt;/h2>
&lt;p>MFC程序可以用动态链接或者静态链接的方式使用MFC的库，动态链接的好处是最后生成的exe文件非常小，缺点是目标机器必须安装对应的运行库，或者要在文件夹里手动放入所需的dll；静态链接的好处是直接把VC的运行库链接到最终的exe里，不必安装运行库或者添加一堆dll就可以直接运行，缺点是生成的exe会比较大。&lt;/p>
&lt;p>静态链接多占用的那一点空间对我来说没什么影响，所以我打算采取静态链接的方法解决上面提到的问题，MFC的库好办，只需要改项目属性就可以了，而静态链接BCG库则多一点波折，关于如何静态链接BCG库网上也有很多方法，但是并不全面，经过一番查找，我自己总结了在MFC里静态链接BCG库的方法，内容主要参考自&lt;a class="link" href="https://support.bcgsoft.com/KB/Category/19-technical-questions" target="_blank" rel="noopener"
>BCG技术问答&lt;/a>里的&lt;a class="link" href="https://support.bcgsoft.com/KB/View/37-how-can-i-add-a-library-to-my-static-mfc-project" target="_blank" rel="noopener"
>这个问题&lt;/a>&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;h3 id="准备">准备&lt;/h3>
&lt;ol>
&lt;li>编译所需版本的静态库lib文件（这一步在安装BCG库的时候一般做过了，直接拷贝出来就行，如 &lt;code>BCGCBPRO2510STATICU140.lib&lt;/code> ）&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>修改项目属性
&lt;ul>
&lt;li>&lt;code>C/C++&lt;/code> -&amp;gt; &lt;code>代码生成&lt;/code> -&amp;gt; &lt;code>运行库&lt;/code> 里选择 &lt;code>MT&lt;/code> (release)或者 &lt;code>MTd&lt;/code> (debug)&lt;/li>
&lt;li>&lt;code>常规&lt;/code> 里选择 &lt;code>在静态库中使用 MFC&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>将BCGSoft\BCGControlBarPro\BCGCBPro\Styles下的
&lt;ul>
&lt;li>&lt;code>Office 2010 (blue)&lt;/code> 文件夹(以该主题为例)&lt;/li>
&lt;li>&lt;code>BCGPStyle2010Blue.rc&lt;/code> 和 &lt;code>BCGPStyle2010Blue.rc2&lt;/code> 文件&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>拷贝到&lt;code>你的项目主目录&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="修改-stdafxcpp">修改 &lt;code>stdafx.cpp&lt;/code>&lt;/h3>
&lt;p>在 &lt;code>stdafx.cpp&lt;/code> 文件的最后（在 &lt;code>#include stdafx.h&lt;/code> 之后）添加以下代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#if _MSC_VER &amp;gt; 1500
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#define COMPILE_MULTIMON_STUBS
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma warning(push)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma warning(disable: 4996)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;#34;multimon.h&amp;#34;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#pragma warning(pop)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="修改资源文件属性">修改资源文件属性&lt;/h3>
&lt;p>在资源视图的对话框上点击右键，选择 &lt;code>资源包括(L)...&lt;/code>&lt;/p>
&lt;ol>
&lt;li>在 &lt;code>只读符号指令&lt;/code> 里添加 &lt;code>#include &amp;quot;bcgprores.h&amp;quot;&lt;/code>&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>在&lt;code>编译时指令&lt;/code>里
&lt;ul>
&lt;li>移除&lt;code>_AFX_NO_SPLITTER_RESOURCES&lt;/code>&lt;/li>
&lt;li>添加&lt;code>#include &amp;quot;BCGCBPro.rc&amp;quot;&lt;/code>和&lt;code>#include &amp;quot;BCGPStyle2010Blue.rc&amp;quot;&lt;/code>&lt;/li>
&lt;li>如果你想动态链接MFC，静态链接BCG, 则添加&lt;code>&amp;quot;#define _BCGCBPRO_STATIC_&amp;quot;&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;ul>
&lt;li>(这条基本不用管)如果你的项目是从MFC版本2008或更高版本移植的，请删除资源文件中对 &lt;code>afxribbon.rc&lt;/code> 的所有引用，因为它和 &lt;code>BCGCBPro.rc&lt;/code> 冲突&lt;/li>
&lt;/ul></description></item><item><title>使用C++11实现一个简易计时器类</title><link>https://i-square.github.io/p/Implement-a-simple-timer-class-using-C-11/</link><pubDate>Mon, 22 May 2017 20:59:21 +0000</pubDate><guid>https://i-square.github.io/p/Implement-a-simple-timer-class-using-C-11/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>计时器可能是大多数程序员都自己实现过的一个功能，尤其是&lt;code>C++&lt;/code>这种没有计时器类可以直接调用的，一般都会自己实现一个，而由于硬件的原因，想要一个跨平台的计时器功能还要兼顾不同的硬件平台，增加程序员的工作量。&lt;code>C++11&lt;/code>标准发布之后，新增了&lt;code>chrono&lt;/code>命名空间，里面包含了大量与时间相关的功能，利用它可以非常方便的写出一个计时器类。&lt;/p>
&lt;!-- more -->
&lt;h2 id="旧式计时器类">旧式计时器类&lt;/h2>
&lt;p>先说一下以往的方法，在 &lt;code>Windows&lt;/code> 平台上，想要实现一个高精度的计时器，一般会用到2个 &lt;code>Windows API&lt;/code> ， &lt;code>QueryPerformanceFrequency&lt;/code> 和 &lt;code>QueryPerformanceCounter&lt;/code> ，配合使用获取高精度时间间隔。而 &lt;code>linux&lt;/code> 平台则一般使用 &lt;code>gettimeofday&lt;/code> 函数，可以获取微妙精度的时间，如需更高精度，则可能要用到汇编。&lt;/p>
&lt;h3 id="接口">接口&lt;/h3>
&lt;p>它可能长这样，为了兼顾不同平台，需要预处理宏的帮忙。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;time.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#ifdef _WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;windows.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#if !defined(_WINSOCK2API_) &amp;amp;&amp;amp; !defined(_WINSOCKAPI_)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="k">struct&lt;/span> &lt;span class="nc">timeval&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">long&lt;/span> &lt;span class="n">tv_sec&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">long&lt;/span> &lt;span class="n">tv_usec&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#else&lt;/span>&lt;span class="c1">//_WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;sys/time.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#endif&lt;/span>&lt;span class="c1">//_WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="kt">double&lt;/span> &lt;span class="n">timer_dt&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">Timer&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">public&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Timer&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">~&lt;/span>&lt;span class="n">Timer&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="nf">start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="nf">stop&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">timer_dt&lt;/span> &lt;span class="nf">get_time&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#ifdef _WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span> &lt;span class="kt">double&lt;/span> &lt;span class="n">freq&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">LARGE_INTEGER&lt;/span> &lt;span class="n">start_time&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">LARGE_INTEGER&lt;/span> &lt;span class="n">finish_time&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#else&lt;/span>&lt;span class="c1">//_WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="nc">timeval&lt;/span> &lt;span class="n">start_time&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">struct&lt;/span> &lt;span class="nc">timeval&lt;/span> &lt;span class="n">finish_time&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#endif&lt;/span>&lt;span class="c1">//_WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="实现">实现&lt;/h3>
&lt;p>核心的3个函数&lt;code>start()&lt;/code>、&lt;code>stop()&lt;/code>和&lt;code>get_time()&lt;/code>的实现可能是这样的：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 构造函数里获取高精度时钟的频率
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">Timer&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">Timer&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#ifdef _WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span> &lt;span class="n">LARGE_INTEGER&lt;/span> &lt;span class="n">tmp&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">QueryPerformanceFrequency&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">LARGE_INTEGER&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">tmp&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">freq&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">tmp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">QuadPart&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mf">1000.0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#endif
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="n">Timer&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#ifdef _WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span> &lt;span class="n">QueryPerformanceCounter&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">LARGE_INTEGER&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">start_time&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#else&lt;/span>&lt;span class="c1">//_WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">gettimeofday&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">start_time&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#endif&lt;/span>&lt;span class="c1">//_WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">void&lt;/span> &lt;span class="n">Timer&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">stop&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#ifdef _WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span> &lt;span class="n">QueryPerformanceCounter&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">LARGE_INTEGER&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">finish_time&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#else&lt;/span>&lt;span class="c1">//_WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">gettimeofday&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">finish_time&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#endif&lt;/span>&lt;span class="c1">//_WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">timer_dt&lt;/span> &lt;span class="n">Timer&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">get_time&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">timer_dt&lt;/span> &lt;span class="n">interval&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mf">0.0f&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#ifdef _WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span> &lt;span class="n">interval&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">timer_dt&lt;/span>&lt;span class="p">)((&lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="p">)(&lt;/span>&lt;span class="n">finish_time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">QuadPart&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">start_time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">QuadPart&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">freq&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#else
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span> &lt;span class="c1">// time difference in milli-seconds
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">interval&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">timer_dt&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="mf">1000.0&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span> &lt;span class="n">finish_time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tv_sec&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start_time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tv_sec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">+&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">0.001&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">finish_time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tv_usec&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start_time&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">tv_usec&lt;/span>&lt;span class="p">)));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#endif&lt;/span>&lt;span class="c1">//_WIN32
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">interval&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="c11-计时器类">C++11 计时器类&lt;/h2>
&lt;h3 id="chrono">chrono&lt;/h3>
&lt;p>&lt;code>C++11&lt;/code> 标准发布之后，给我们带来了 &lt;code>chrono&lt;/code> 命名空间，里面的东西虽说名字特别难记:P，但是用起来很方便，用它来实现一个跨平台、高精度的计时器类只需要十几行代码，甚至核心代码只有3行：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;chrono&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">// 这里为了方便说明直接用了该命名空间，实际情况请酌情使用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">chrono&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">Timer&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">public&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Timer&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">tpStart&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">high_resolution_clock&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()),&lt;/span> &lt;span class="n">tpStop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tpStart&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">public&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">tpStart&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">high_resolution_clock&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="nf">stop&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">tpStop&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">high_resolution_clock&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">template&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">typename&lt;/span> &lt;span class="n">span&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">auto&lt;/span> &lt;span class="n">delta&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">duration_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">span&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">high_resolution_clock&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">tpStart&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">private&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">time_point&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">high_resolution_clock&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">tpStart&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">time_point&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">high_resolution_clock&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">tpStop&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>没错，只需要这些代码就可以实现一个跨平台且高精度的计时器类，使用方法也非常简单，可以按需选择精度，例：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Timer&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// some code here
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">stop&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 调用 delta() 函数时需指定精度，以下四种均在chrono命名空间内定义
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// seconds, milliseconds, microseconds, nanoseconds
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;the xxx time is: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">delta&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">nanoseconds&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 输出纳秒
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;the xxx time is: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">t&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">delta&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">milliseconds&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 输出毫秒
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>为了方便使用，还可以加入以下两个函数。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">template&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">typename&lt;/span> &lt;span class="n">span&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">auto&lt;/span> &lt;span class="n">stop_delta&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">stop&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">duration_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">span&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tpStop&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">tpStart&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">template&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">typename&lt;/span> &lt;span class="n">span&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">auto&lt;/span> &lt;span class="n">stop_delta_start&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stop&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">auto&lt;/span> &lt;span class="n">ts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">duration_cast&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">span&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tpStop&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">tpStart&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">ts&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="ratio">ratio&lt;/h3>
&lt;p>C++11还增加了 &lt;code>ratio&lt;/code> 命名空间，顾名思义，这个命名空间里定义了一堆比率，如 &lt;code>std::milli&lt;/code> 、 &lt;code>std::micro&lt;/code> 、 &lt;code>std::nano&lt;/code> ，配合这些比率我们就可以实现一个返回浮点数的计时器了，核心代码如下，只是修改了一点点内容:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;chrono&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;ratio&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="c1">// 这里为了方便说明直接用了该命名空间，实际情况请酌情使用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">using&lt;/span> &lt;span class="k">namespace&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">chrono&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">Timer&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">public&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">using&lt;/span> &lt;span class="n">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ratio&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">using&lt;/span> &lt;span class="n">ms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ratio&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">using&lt;/span> &lt;span class="n">us&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ratio&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1000000&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">using&lt;/span> &lt;span class="n">ns&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ratio&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1000000000&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">public&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">Timer&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">tpStart&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">high_resolution_clock&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()),&lt;/span> &lt;span class="n">tpStop&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tpStart&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">public&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">tpStart&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">high_resolution_clock&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="nf">stop&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">tpStop&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">high_resolution_clock&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">template&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">typename&lt;/span> &lt;span class="n">span&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">auto&lt;/span> &lt;span class="n">delta&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">duration&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">span&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">high_resolution_clock&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">tpStart&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">template&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">typename&lt;/span> &lt;span class="n">span&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">auto&lt;/span> &lt;span class="n">stop_delta&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">stop&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">duration&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">span&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tpStop&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">tpStart&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">template&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="k">typename&lt;/span> &lt;span class="n">span&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">auto&lt;/span> &lt;span class="n">stop_delta_start&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">stop&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">auto&lt;/span> &lt;span class="n">ts&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">duration&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="kt">double&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">span&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">tpStop&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">tpStart&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">start&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">ts&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">private&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">time_point&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">high_resolution_clock&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">tpStart&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">time_point&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">high_resolution_clock&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">tpStop&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="总结">总结&lt;/h2>
&lt;p>C++11新增的这个 &lt;code>chrono&lt;/code> 命名空间非常方便好用，由于是标准库，在跨平台方面具有天然优势，在代码简洁程度上也比原来要好，配合模板更加可以减少代码量，当然它不止能用来做计时器用，还有很多别的方面的应用，在此就不多说了，以后可能会补充。&lt;/p></description></item><item><title>C盘根目录下的两个sys文件说明</title><link>https://i-square.github.io/p/Description-of-the-two-sys-files-in-the-root-directory-of-the-C-drive/</link><pubDate>Wed, 19 Apr 2017 16:24:22 +0000</pubDate><guid>https://i-square.github.io/p/Description-of-the-two-sys-files-in-the-root-directory-of-the-C-drive/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>实验室里有一台高配工作站，内存有512GB，用一块256GB的SSD安装Win7 x64操作系统以后，硬盘空间只剩下几十MB了，查看C盘下的文件之后，发现有两个隐藏的系统文件占用了200GB+的空间，于是马上查了它们的来头。&lt;/p>
&lt;!-- more -->
&lt;h2 id="pagefilesys">pagefile.sys&lt;/h2>
&lt;p>&lt;code>pagefile.sys&lt;/code> 是系统安装过程中创建的虚拟内存页面文件。这个文件的大小是自己系统虚拟内存设置的最小值的大小。假如虚拟内存的设置为800MB－1600MB 那么你在自己的设定驱动盘下面就可看到大小为800MB的 &lt;code>pagefile.sys&lt;/code> 文件。&lt;/p>
&lt;h3 id="优化方法">优化方法&lt;/h3>
&lt;p>通常自己可以在 &lt;code>我的电脑&lt;/code> 右键 &lt;code>属性&lt;/code> &amp;ndash;&amp;gt; &lt;code>高级&lt;/code> &amp;ndash;&amp;gt; &lt;code>性能&lt;/code> &amp;ndash;&amp;gt; &lt;code>高级&lt;/code> &amp;ndash;&amp;gt; &lt;code>虚拟内存&lt;/code> 中将所有盘的虚拟内存设置为无分页文件，并选择&lt;code>设置&lt;/code>后重启系统，就可以删除页面文件&lt;code>pagefile.sys&lt;/code>。&lt;/p>
&lt;h2 id="hiberfilsys">hiberfil.sys&lt;/h2>
&lt;p>这个文件是系统的休眠功能所占用的硬盘空间的文件（Windows默认休眠功能是处于打开状态的），电脑处于休眠状态时，内存中的所有内容将保存到硬盘，并且电脑会被关闭。电脑在返回打开状态之后，关闭电脑时打开的所有程序和文档将全都还原到桌面。也就是说，当你让电脑进入休眠状态时，Windows在关闭系统前将所有的内存内容写入 &lt;code>hiberfil.sys&lt;/code> 文件，当你重新打开电脑，操作系统使用 &lt;code>hiberfil.sys&lt;/code> 把所有信息放回内存，电脑恢复到关闭前的状态。然而，只要休眠功能开启，Windows就会在硬盘上留下 &lt;code>hiberfil.sys&lt;/code> 文件，即使你从来不休眠。&lt;/p>
&lt;h3 id="优化方法-1">优化方法&lt;/h3>
&lt;p>以管理员身份运行CMD，然后输入命令 &lt;code>powercfg -h off&lt;/code> ，回车后立即生效， &lt;code>hiberfil.sys&lt;/code> 文件已经不见了。&lt;/p></description></item><item><title>MathType6.9b不兼容Office2016的解决办法</title><link>https://i-square.github.io/p/Solution-to-the-problem-that-MathType6.9b-is-not-compatible-with-Office2016/</link><pubDate>Wed, 29 Mar 2017 18:37:43 +0000</pubDate><guid>https://i-square.github.io/p/Solution-to-the-problem-that-MathType6.9b-is-not-compatible-with-Office2016/</guid><description>&lt;h2 id="问题">问题&lt;/h2>
&lt;p>安装MathType6.9b后打开Word2016，发现菜单栏里并没有集成MathType，想办法解决以后，菜单栏上已经集成了MathType，但是仍然不能用，每次打开Word都会弹框提示Mathpage.wll未找到，无奈又去网上找寻了解决办法，在这里记录一下，就当云笔记了。&lt;/p>
&lt;!-- more -->
&lt;h2 id="解决办法">解决办法&lt;/h2>
&lt;h3 id="office2016支持">Office2016支持&lt;/h3>
&lt;p>Office2016需要在MathType根目录下添加文件MPlugin.dll，一般在安装文件夹里&lt;/p>
&lt;h3 id="mathpagewll未找到问题">Mathpage.wll未找到问题&lt;/h3>
&lt;p>通过以下方法解决(以Office2016为例)：&lt;/p>
&lt;ol>
&lt;li>依次打开 &lt;code>Word→文件→选项→信任中心→信任中心设置→受信任位置→添加新位置&lt;/code>&lt;br>
添加 &lt;code>C:\Program Files\Microsoft Office\Office16\STARTUP&lt;/code>，然后关闭Word&lt;/li>
&lt;li>在mathtype安装目录下找到以下2个文件(以64位系统为例):
&lt;ul>
&lt;li>&lt;code>C:\Program Files (x86)\MathType\MathPage\64\MathPage.wll&lt;/code>&lt;/li>
&lt;li>&lt;code>C:\Program Files (x86)\MathType\Office Support\64\MathType Commands 6 For Word 2016.dotm&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>将两个文件分别拷贝到对应的文件夹中:
&lt;ul>
&lt;li>将 &lt;code>MathType Commands 6 For Word 2016.dotm&lt;/code> 拷贝到 &lt;code>C:\Program Files\Microsoft Office\Office16\STARTUP&lt;/code>&lt;/li>
&lt;li>将 &lt;code>MathPage.wll&lt;/code> 拷贝到 &lt;code>C:\Program Files\Microsoft Office\Office16&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>重新打开Word你会发现一切都OK了!&lt;/li>
&lt;/ol></description></item><item><title>Office2016中右键无法打开Visio图像的解决办法</title><link>https://i-square.github.io/p/Solution-to-the-problem-that-cannot-open-the-Visio-object-by-right-click-in-Office2016/</link><pubDate>Sun, 26 Mar 2017 15:21:56 +0000</pubDate><guid>https://i-square.github.io/p/Solution-to-the-problem-that-cannot-open-the-Visio-object-by-right-click-in-Office2016/</guid><description>&lt;h2 id="问题">问题&lt;/h2>
&lt;p>在Office2016中，右键Visio图像，只有“转换”功能，而不再提供之前早期Office中提供的“打开”和“编辑”功能，那么，如何能够在Office2016中打开visio图像呢？&lt;/p>
&lt;!-- more -->
&lt;h2 id="解决办法">解决办法&lt;/h2>
&lt;p>在Visio图上使用 &lt;code>ALT + 双击鼠标左键&lt;/code> 即可在Visio中打开&lt;br>
直接双击Visio图像则是和之前版本一样，在当前Office窗口中打开Visio图。&lt;/p></description></item><item><title>增强VPS安全性的常用方法</title><link>https://i-square.github.io/p/Common-Ways-to-Enhance-VPS-Security/</link><pubDate>Mon, 06 Mar 2017 09:24:30 +0000</pubDate><guid>https://i-square.github.io/p/Common-Ways-to-Enhance-VPS-Security/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>因为之前提到的Gihub学生包，我入手了 &lt;code>DigitalOcean&lt;/code> 的VPS，由于刚刚接触VPS，对于VPS的安全性并没有什么概念，所以我直接使用一个汉化版PuTTY客户端，以root账户在22端口登录的，刚开始登录几次都没出现什么状况，然而隔天登录的时候就出现了类似以下的提示，这才让我产生了要提高VPS安全性的想法。&lt;/p>
&lt;!-- more -->
&lt;blockquote>
&lt;p>Last failed login: Tue Feb 10 23:32:08 EST 2017 from static-15-64-34.rpnspl.com on ssh:notty
There were 166 failed login attempts since the last successful login.
Last login: Tue Feb 10 18:54:37 2017 from &lt;code>ip&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>这里的 &lt;code>ip&lt;/code> 并不是我的IP地址，也就是说有人(或机器人)在恶意试探我的VPS密码。看到这提示，我马上上谷歌搜索，发现这个现象非常普遍，多数都是被机器人扫描然后试图暴力破解，如果不加以防范，代价会很大。&lt;/p>
&lt;p>我在查问题的时候发现，PuTTY官方并没有提供中文版本，所以网上的汉化版有可能被植入后门，非常不安全，所以在此提醒，这一类涉及重要密码的软件&lt;strong>绝对不要&lt;/strong>用民间汉化版！&lt;/p>
&lt;p>那么如何知道自己的VPS账号正在遭受扫描和暴力破解呢？简单的方法就是查看日志：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看登录成功的用户信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">last
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 最新的登录记录在最前面，所以可以用以下命令来查看。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">last &lt;span class="p">|&lt;/span> less
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看登录失败的用户信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lastb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看登录日志&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tail /var/log/secure
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>也可以执行以下命令，查询出来的结果中包含了&lt;code>ip地址=数量&lt;/code>就是攻击者信息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat /var/log/secure&lt;span class="p">|&lt;/span>awk &lt;span class="s1">&amp;#39;/Failed/{print $(NF-3)}&amp;#39;&lt;/span>&lt;span class="p">|&lt;/span>sort&lt;span class="p">|&lt;/span>uniq -c&lt;span class="p">|&lt;/span>awk &lt;span class="s1">&amp;#39;{print $2&amp;#34;=&amp;#34;$1;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如何来增强VPS账号的安全性呢？除了养成使用正规软件的好习惯外，还要从VPS本身来加强VPS账号的安全性。&lt;/p>
&lt;ul>
&lt;li>Linux有一个自动统计VPS登录错误的工具： &lt;code>Denyhosts&lt;/code> ，一旦登录VPS账号错误次数超过了 &lt;code>Denyhosts&lt;/code> 的安全设置， &lt;code>Denyhosts&lt;/code> 就会将该IP记录下来，同时将其放入黑名单当中，禁止该IP在某一段时间内继续访问VPS，通过它可以实现自动封锁恶意IP&lt;/li>
&lt;li>默认的SSH端口是22，通过修改自己的SSH端口先为扫描者增加一道端口门槛&lt;/li>
&lt;li>VPS默认的账号是root，如果我们禁用了root，那么要攻破账号又得先暴力猜测VPS的账号，难度又增加几分&lt;/li>
&lt;li>如果还不放心，我们可以直接禁用密码登录验证VPS的方式，改用密钥登录，这样安全系数是相当高了&lt;/li>
&lt;/ul>
&lt;p>&lt;em>注：本人主机为CentOS 7 x64系统，以下内容均基于此环境&lt;/em>&lt;/p>
&lt;h2 id="denyhosts攻击">Denyhosts攻击&lt;/h2>
&lt;ol>
&lt;li>Linux各平台现在基本上都可以直接安装Denyhosts了，直接运行命令安装&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum install denyhosts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>
&lt;p>安装好了Denyhosts，默认的配置基本上就可以防御一定的暴力攻击了， &lt;code>/etc/hosts.deny&lt;/code> 文件里保存了被屏蔽的记录。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果你要自定义Denyhosts的相关配置，执行： &lt;code>vi /etc/denyhosts.conf&lt;/code> ，相关参数的说明可以自行搜索，一般用户默认即可。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="修改ssh端口">修改SSH端口&lt;/h2>
&lt;p>输入命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vi /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>编辑SSH服务的配置文件，找到 &lt;code>#port 22&lt;/code> ，将前面的 &lt;code>#&lt;/code> 去掉，然后将 &lt;code>22&lt;/code> 修改为你自己设定的端口号，如 &lt;code>12345&lt;/code> ，保存后重启SSH服务以使配置生效&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart sshd.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="禁用root账户">禁用Root账户&lt;/h2>
&lt;p>禁用root账户之前，必须先新建一个新的账户。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">useradd user &lt;span class="c1">#添加用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">passwd user &lt;span class="c1">#为user用户设置密码&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后编辑配置文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vi /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>找到里面的 &lt;code>PermitRootLogin yes&lt;/code> ，将后面的 &lt;code>yes&lt;/code> 改成 &lt;code>no&lt;/code> ，如果没有这一行则直接加入即可。保存后重启SSH服务以使配置生效&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart sshd.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用密钥登录">使用密钥登录&lt;/h2>
&lt;h3 id="生成密钥">生成密钥&lt;/h3>
&lt;p>SSH登录方式有账号+密码和密钥认证两种形式，为了阻止暴力破解VPS的账号和密码，我们可以放弃密码验证的方式，改用密钥文件验证。&lt;/p>
&lt;p>以&lt;strong>普通用户&lt;/strong>(如user)执行以下命令，在VPS上生成密钥文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh-keygen -t rsa
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>生成密钥时会询问你密钥保存的位置，默认是 &lt;code>/username/.ssh&lt;/code> ，保持默认即可，你还可以为你的密钥设置一个密码，默认为空。&lt;/p>
&lt;p>密钥生成后，进入密钥存放的目录中，执行以下命令，将公钥生成一个新的文件。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat id_rsa.pub &amp;gt;&amp;gt; authorized_keys
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将id-rsa这个私钥文件用winSCP下载到本地，打开PuTTYGen软件，执行Conversions-&amp;gt;Import Key，导入这个私钥文件，然后选择Save private key，这时会在本地生成一个PPK文件，在PuTTY的 &lt;code>Connection/SSH/Auth&lt;/code> 中选择刚刚保存的PPK文件，以后即可用密钥认证登录VPS了。&lt;/p>
&lt;h3 id="centos-7权限问题">CentOS 7权限问题&lt;/h3>
&lt;p>CentOS 7系统下，用户user的home目录： &lt;code>/home/user&lt;/code> 的权限变成了 &lt;code>777&lt;/code> ，造成不能正常登陆SSH，报如下错误： &lt;code>Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password)&lt;/code>&lt;/p>
&lt;p>SSH对公钥、私钥的权限和所有权的要求是非常严格的，总结如下：
1、下面两个目录的所有权必须是 &lt;code>user&lt;/code> ，所属组也应该是 &lt;code>user&lt;/code> ，权限必须为 &lt;code>700&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>/home/user
/home/user/.ssh&lt;/p>
&lt;/blockquote>
&lt;p>2、下面公钥文件的所有权必须是 &lt;code>user&lt;/code> ，所属组也应该是 &lt;code>user&lt;/code> ，权限必须为 &lt;code>644&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>/home/user/.ssh/authorized_keys&lt;/p>
&lt;/blockquote>
&lt;p>3、下面私钥文件的所有权必须是 &lt;code>user&lt;/code> ，所属组也应该是 &lt;code>user&lt;/code> ，权限必须是 &lt;code>600&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>/home/user/.ssh/id_rsa&lt;/p>
&lt;/blockquote>
&lt;p>接着上面的操作，这次需要获取root权限，首先输入命令 &lt;code>su&lt;/code> 再输入root密码获取root权限，然后依次执行以下命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir /etc/ssh/user
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp /home/user/.ssh/authorized_keys /etc/ssh/user/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod &lt;span class="m">755&lt;/span> /etc/ssh/user
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod &lt;span class="m">600&lt;/span> /etc/ssh/user/authorized_keys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chown -R user:user /etc/ssh/user
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>编辑SSH配置文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vi /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>找到 &lt;code>AuthorizedKeysFile&lt;/code> 这项(如果没有则添加)，修改为&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">AuthorizedKeysFile /etc/ssh/%u/authorized_keys
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>保存后重启SSH服务以使配置生效&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart sshd.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="禁止密码登录">禁止密码登录&lt;/h3>
&lt;p>&lt;strong>注意：请确认你已经可以通过密钥认证的方式登录VPS&lt;/strong>&lt;/p>
&lt;p>有了密钥登录VPS，我们就可以禁止用密码登录这种验证方式了，还是
编辑SSH配置文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vi /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>找到 &lt;code>PasswordAuthentication&lt;/code> (没有则添加)并修改后面的 &lt;code>yes&lt;/code> 为 &lt;code>no&lt;/code> ，保存后重启SSH服务以使配置生效&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart sshd.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="小结">小结&lt;/h2>
&lt;p>通过以上这些措施可以有效防范暴力破解VPS，平时使用官方软件也是提升安全性的一大举措，总而言之，没有绝对的安全，但是只要我们平时稍加留心就不会给破解者可乘之机。&lt;/p></description></item></channel></rss>