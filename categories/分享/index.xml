<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>分享 on 平方君的后花园</title><link>https://i-square.github.io/categories/%E5%88%86%E4%BA%AB/</link><description>Recent content in 分享 on 平方君的后花园</description><generator>Hugo -- gohugo.io</generator><language>zh-Hans</language><lastBuildDate>Wed, 15 Mar 2023 13:15:09 +0800</lastBuildDate><atom:link href="https://i-square.github.io/categories/%E5%88%86%E4%BA%AB/index.xml" rel="self" type="application/rss+xml"/><item><title>体验GitHub Copilot Labs：探索AI在编程领域的无限可能</title><link>https://i-square.github.io/p/Experience-GitHub-Copilot-Labs-Explore-the-infinite-possibilities-of-AI-in-programming/</link><pubDate>Wed, 15 Mar 2023 13:15:09 +0800</pubDate><guid>https://i-square.github.io/p/Experience-GitHub-Copilot-Labs-Explore-the-infinite-possibilities-of-AI-in-programming/</guid><description>&lt;img src="https://i-square.github.io/p/Experience-GitHub-Copilot-Labs-Explore-the-infinite-possibilities-of-AI-in-programming/copilot.svg" alt="Featured image of post 体验GitHub Copilot Labs：探索AI在编程领域的无限可能" />&lt;h2 id="github-copilot-labs">GitHub Copilot Labs&lt;/h2>
&lt;p>GitHub Copilot是一个基于人工智能的编程助手，它可以根据你输入的代码、注释、变量名等信息，自动给出可能符合你意图的代码建议。它可以帮助你快速完成各种编程任务，从简单的函数定义到复杂的算法实现。&lt;/p>
&lt;p>GitHub Copilot Labs是一个与GitHub Copilot配套使用的VS Code扩展插件，它提供了一些实验性的功能，用来探索人工智能在编程领域的更多可能性。目前有四个功能可用：explain、translate、IDE Brushes和test generation，目前我只体验了前两个功能。&lt;/p>
&lt;h2 id="安装和使用">安装和使用&lt;/h2>
&lt;p>要使用GitHub Copilot Labs，首先需要安装VS Code，并且拥有一个GitHub Copilot许可证。如果你还没有许可证，可以在&lt;a class="link" href="https://github.com/features/copilot" target="_blank" rel="noopener"
>这里&lt;/a>申请一个免费试用或付费购买。&lt;/p>
&lt;p>然后，在VS Code的扩展市场中搜索并安装“Copilot Labs”这个插件。安装完成后，你会看到VS Code侧边栏上出现了一个Copilot图标。点击这个图标，就可以打开Copilot Labs面板，并看到四个不同的功能选项卡。&lt;/p>
&lt;h2 id="explain功能解释代码">explain功能：解释代码&lt;/h2>
&lt;p>explain功能是用来帮助你理解代码的含义和作用的。当你选中一段代码，并按下 &lt;code>Ctrl+Shift+P（Windows/Linux）&lt;/code> 或 &lt;code>Command+Shift+P（Mac）&lt;/code> 打开命令面板时，你可以输入 &lt;code>Copilot: Explain&lt;/code> 来激活这个功能。然后，在弹出的对话框中输入一个问题，比如 &lt;code>what does this code do?&lt;/code> 或 &lt;code>how to use this function?&lt;/code> 等等。Copilot会尝试根据选中的代码给出一个简洁明了的回答，类似于一个教程或文档。你可以通过点击 &lt;code>Ask Copilot&lt;/code> 按钮来重复这个过程，直到你满意为止。&lt;/p>
&lt;blockquote>
&lt;p>当然也有更直观的操作方式，如图，只需选中一段代码，在左侧栏中即可点击 &lt;code>Ask Copilot&lt;/code> 按钮：&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://i-square.github.io/p/Experience-GitHub-Copilot-Labs-Explore-the-infinite-possibilities-of-AI-in-programming/screenshots/2023-03-15-13-51-11.png"
width="293"
height="502"
srcset="https://i-square.github.io/p/Experience-GitHub-Copilot-Labs-Explore-the-infinite-possibilities-of-AI-in-programming/screenshots/2023-03-15-13-51-11_hu89a107b293ad3d1a3f8232b62910f562_18470_480x0_resize_box_3.png 480w, https://i-square.github.io/p/Experience-GitHub-Copilot-Labs-Explore-the-infinite-possibilities-of-AI-in-programming/screenshots/2023-03-15-13-51-11_hu89a107b293ad3d1a3f8232b62910f562_18470_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="explain界面"
class="gallery-image"
data-flex-grow="58"
data-flex-basis="140px"
>&lt;/p>
&lt;h3 id="explain功能示例">explain功能示例&lt;/h3>
&lt;ul>
&lt;li>Python：如何使用factorial函数&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Explain code: how to use this function?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">factorial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">factorial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Copilot answer:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">This function calculates the factorial of a given number n. The factorial of n is defined as the product of all positive integers from 1 to n. For example, factorial(5) = 5 * 4 * 3 * 2 * 1 = 120.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">To use this function, you can call it with an argument that is a non-negative integer. For example:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">factorial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># prints 120&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">factorial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># prints 1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">factorial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="c1"># raises an exception&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>JavaScript：如何反转字符串&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Explain code: what does this code do?
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">reverseString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">reversed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">reversed&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="nx">str&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">reversed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Copilot answer:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">This&lt;/span> &lt;span class="nx">code&lt;/span> &lt;span class="nx">defines&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">named&lt;/span> &lt;span class="nx">reverseString&lt;/span> &lt;span class="nx">that&lt;/span> &lt;span class="nx">takes&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="nx">string&lt;/span> &lt;span class="nx">as&lt;/span> &lt;span class="nx">an&lt;/span> &lt;span class="nx">argument&lt;/span> &lt;span class="nx">and&lt;/span> &lt;span class="nx">returns&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">string&lt;/span> &lt;span class="nx">that&lt;/span> &lt;span class="nx">is&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="nx">reverse&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="nx">original&lt;/span> &lt;span class="nx">one&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="nx">For&lt;/span> &lt;span class="nx">example&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">reverseString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;hello&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="nx">returns&lt;/span> &lt;span class="s2">&amp;#34;olleh&amp;#34;&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">The&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">uses&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="nx">loop&lt;/span> &lt;span class="nx">to&lt;/span> &lt;span class="nx">iterate&lt;/span> &lt;span class="nx">over&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="nx">characters&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="nx">input&lt;/span> &lt;span class="nx">string&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="nx">end&lt;/span> &lt;span class="nx">to&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="nx">beginning&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">and&lt;/span> &lt;span class="nx">concatenates&lt;/span> &lt;span class="nx">them&lt;/span> &lt;span class="nx">to&lt;/span> &lt;span class="nx">a&lt;/span> &lt;span class="nx">variable&lt;/span> &lt;span class="nx">named&lt;/span> &lt;span class="nx">reversed&lt;/span>&lt;span class="p">.&lt;/span> &lt;span class="nx">At&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="nx">end&lt;/span> &lt;span class="k">of&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="nx">loop&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">reversed&lt;/span> &lt;span class="nx">contains&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="nx">reversed&lt;/span> &lt;span class="nx">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">which&lt;/span> &lt;span class="nx">is&lt;/span> &lt;span class="nx">returned&lt;/span> &lt;span class="nx">by&lt;/span> &lt;span class="nx">the&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="translate功能翻译代码">translate功能：翻译代码&lt;/h2>
&lt;p>translate功能是用来帮助你把代码从一种编程语言翻译成另一种编程语言的。当你选中一段代码，并按下 &lt;code>Ctrl+Shift+P（Windows/Linux）&lt;/code> 或 &lt;code>Command+Shift+P（Mac）&lt;/code> 打开命令面板时，你可以输入 &lt;code>Copilot: Translate&lt;/code> 来激活这个功能。然后，在弹出的对话框中选择你想要翻译成的目标语言，比如Python、Ruby、Java等等。Copilot会尝试根据选中的代码生成等价的代码，并显示在编辑器右侧的小窗口中。你可以按下Tab键或点击小窗口来接受Copilot生成的代码，也可以按下Esc键或点击其他地方来忽略它。&lt;/p>
&lt;blockquote>
&lt;p>类似低，只需选中一段代码，在左侧栏中即可点击 &lt;code>Ask Copilot&lt;/code> 按钮来转换代码：&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://i-square.github.io/p/Experience-GitHub-Copilot-Labs-Explore-the-infinite-possibilities-of-AI-in-programming/screenshots/2023-03-15-13-51-51.png"
width="289"
height="470"
srcset="https://i-square.github.io/p/Experience-GitHub-Copilot-Labs-Explore-the-infinite-possibilities-of-AI-in-programming/screenshots/2023-03-15-13-51-51_huf39538feaadfd95facc96f2001a27d0e_13051_480x0_resize_box_3.png 480w, https://i-square.github.io/p/Experience-GitHub-Copilot-Labs-Explore-the-infinite-possibilities-of-AI-in-programming/screenshots/2023-03-15-13-51-51_huf39538feaadfd95facc96f2001a27d0e_13051_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="language translation界面"
class="gallery-image"
data-flex-grow="61"
data-flex-basis="147px"
>&lt;/p>
&lt;h3 id="translate功能示例">translate功能示例&lt;/h3>
&lt;ul>
&lt;li>Python到Rust：计算阶乘&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Translate code into: Rust&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">factorial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">n&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="n">factorial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-rust" data-lang="rust">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Copilot answer:
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">fn&lt;/span> &lt;span class="nf">factorial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>: &lt;span class="kt">i32&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>-&amp;gt; &lt;span class="kt">i32&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">factorial&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">n&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>JavaScript到C#：反转字符串&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Translate code into: C#
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">function&lt;/span> &lt;span class="nx">reverseString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">let&lt;/span> &lt;span class="nx">reversed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">--&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">reversed&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="nx">str&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">reversed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-C#" data-lang="C#">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Copilot answer:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">string&lt;/span> &lt;span class="n">reverseString&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">string&lt;/span> &lt;span class="n">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">string&lt;/span> &lt;span class="n">reversed&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">str&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">Length&lt;/span> &lt;span class="p">-&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="p">&amp;gt;=&lt;/span> &lt;span class="m">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="n">i&lt;/span>&lt;span class="p">--)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">reversed&lt;/span> &lt;span class="p">+=&lt;/span> &lt;span class="n">str&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">reversed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="体验感想">体验感想&lt;/h2>
&lt;p>使用GitHub Copilot Labs一段时间后，我觉得它是一个非常棒的工具，能够给我带来很多编程上的便利和帮助。它让我写代码更快更轻松，理解代码更容易更深入，修改代码更直观更灵活，测试代码更方便更有效。它也让我有机会学习和尝试一些新的编程语言和框架，增加我的知识和技能。&lt;/p>
&lt;p>当然，GitHub Copilot Labs也不是万能的，它还有一些需要改进和完善的地方。比如：&lt;/p>
&lt;ul>
&lt;li>它需要联网才能工作，如果网络出现问题或中断，就无法获得代码建议。&lt;/li>
&lt;li>它不能保证生成的代码都是正确、安全、高效、规范的，需要我们自己检查和验证。&lt;/li>
&lt;li>它不能取代我们作为程序员的创造力、逻辑思维、问题解决能力等核心素质。&lt;/li>
&lt;/ul>
&lt;p>所以，我认为GitHub Copilot Labs是一个很好的辅助工具，但不是一个替代工具。它可以节省我们的时间和精力，但不能代替我们的主观判断和责任意识。我们应该合理地使用它，并且不断地学习和进步。&lt;/p>
&lt;p>总之，我非常喜欢GitHub Copilot Labs，并且期待它未来能够发展得更好。我也建议你试一试这个工具，并且分享你自己的反馈和意见。让我们一起探索人工智能在编程领域的更多可能性吧！&lt;/p>
&lt;h2 id="真感想">真·感想&lt;/h2>
&lt;p>作为一个程序员，体验过new bing和copilot之后，确实感觉到时代变了，AI距离实用越来越近了。就拿 new bing 来说，我现在遇到一些问题就想先问问它，很大概率它能帮我解决。再看copilot，我只试用了几天就离不开它的便利性了，而且随着你熟悉了用法，会觉得它越用越好用，确实提升了工作效率。&lt;/p>
&lt;p>当然啦，这两个工具也不是万能神器，还有很多地方需要我们自己动脑子和创新。我觉得AI不是要抢我们的饭碗，而是要做我们的小帮手。我们应该好好利用AI的优势来提高我们的生活和工作质量，并且对AI保持理性和负责。&lt;/p></description></item><item><title>体验new bing：一个全新的搜索引擎</title><link>https://i-square.github.io/p/Experience-new-bing-a-brand-new-search-engine/</link><pubDate>Mon, 27 Feb 2023 15:36:13 +0800</pubDate><guid>https://i-square.github.io/p/Experience-new-bing-a-brand-new-search-engine/</guid><description>&lt;img src="https://i-square.github.io/p/Experience-new-bing-a-brand-new-search-engine/newbing_logo.png" alt="Featured image of post 体验new bing：一个全新的搜索引擎" />&lt;p>最近体验了一下集成了 ChatGPT 的最新版本 bing 搜索，我要求它用 markdown 语法写一篇关于体验 new bing 的博客，这就是本文的来源，对原始版本修改不多，只是添加了一部分评论。&lt;/p>
&lt;p>&lt;img src="https://i-square.github.io/p/Experience-new-bing-a-brand-new-search-engine/screenshots/2023-02-27-16-10-16.png"
width="1136"
height="1002"
srcset="https://i-square.github.io/p/Experience-new-bing-a-brand-new-search-engine/screenshots/2023-02-27-16-10-16_hua4f265bb5c9087ce0fdb42c05dd6b993_63371_480x0_resize_box_3.png 480w, https://i-square.github.io/p/Experience-new-bing-a-brand-new-search-engine/screenshots/2023-02-27-16-10-16_hua4f265bb5c9087ce0fdb42c05dd6b993_63371_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="new bing chat topic"
class="gallery-image"
data-flex-grow="113"
data-flex-basis="272px"
>&lt;/p>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>最近，微软发布了一个全新的搜索引擎——new bing，它采用了ChatGPT和AI技术，能够提供更智能、更人性化、更全面的搜索结果。我作为一个热爱尝试新事物的网友，当然不会错过这个机会，所以我申请了new bing的限量预览，并在这里分享一下我的体验感受。&lt;/p>
&lt;h2 id="申请过程">申请过程&lt;/h2>
&lt;p>要想使用new bing，首先需要申请它的限量预览。申请过程其实很简单，只需要按照以下步骤操作：&lt;/p>
&lt;ol>
&lt;li>访问 &lt;a class="link" href="https://www.bing.com/new" target="_blank" rel="noopener"
>https://www.bing.com/new&lt;/a>，点击其中的 &lt;code>Sign up for new Bing&lt;/code> 链接。&lt;/li>
&lt;li>在弹出的页面中，输入你的微软账号和密码，并同意相关条款。&lt;/li>
&lt;li>等待几分钟后，你就会收到一封邮件，告诉你已经成功申请到了new bing的预览资格，并给出了一个专属链接。&lt;/li>
&lt;li>点击邮件中的链接，就可以进入到new bing的主页，并开始使用它。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>博主注:&lt;/p>
&lt;ol>
&lt;li>国内要想免代理申请和使用 new bing，需要重定向到国际版 bing，请自行参考网上教程，比如 &lt;a class="link" href="https://www.yitoujing.com/article/21" target="_blank" rel="noopener"
>这篇文章&lt;/a>&lt;/li>
&lt;li>有可能频繁跳出REF页面导致用不了聊天功能，在 &lt;code>bing.com&lt;/code> 页面清除 &lt;code>bing.com&lt;/code> 的cookies重新登录即可，参考 &lt;a class="link" href="https://blog.csdn.net/AI_Fanatic/article/details/129053010" target="_blank" rel="noopener"
>原文章&lt;/a>&lt;/li>
&lt;li>博主提交申请，加入 waiting list 之后等了2周时间才审核通过，具体时间与什么因素相关暂不可知&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h2 id="使用方式">使用方式&lt;/h2>
&lt;p>使用new bing非常简单和直观。它有一个类似于传统搜索引擎的界面，你可以在搜索框中输入任何你想要查询或聊天的内容，并按回车键或点击放大镜图标进行搜索。&lt;/p>
&lt;p>&lt;img src="https://i-square.github.io/p/Experience-new-bing-a-brand-new-search-engine/screenshots/2023-02-27-16-41-50.png"
width="389"
height="244"
srcset="https://i-square.github.io/p/Experience-new-bing-a-brand-new-search-engine/screenshots/2023-02-27-16-41-50_hu3fa3fdea7e3f96ca250219d97dbf9efc_26843_480x0_resize_box_3.png 480w, https://i-square.github.io/p/Experience-new-bing-a-brand-new-search-engine/screenshots/2023-02-27-16-41-50_hu3fa3fdea7e3f96ca250219d97dbf9efc_26843_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="new bing interface"
class="gallery-image"
data-flex-grow="159"
data-flex-basis="382px"
>&lt;/p>
&lt;p>与普通搜索引擎不同的是，new bing不仅会给出一系列相关链接，还会给出一个完整、详细、可信赖、有来源注明的答案。答案可能是文字、图片、表格、代码等多种形式。而且，你可以用自然语言提问或聊天，无需拘泥于特定格式或关键词。&lt;/p>
&lt;p>&lt;img src="https://i-square.github.io/p/Experience-new-bing-a-brand-new-search-engine/screenshots/2023-02-27-16-44-38.png"
width="1361"
height="1017"
srcset="https://i-square.github.io/p/Experience-new-bing-a-brand-new-search-engine/screenshots/2023-02-27-16-44-38_huc18365f95d9ed4a2b5981e31e174c7bb_53702_480x0_resize_box_3.png 480w, https://i-square.github.io/p/Experience-new-bing-a-brand-new-search-engine/screenshots/2023-02-27-16-44-38_huc18365f95d9ed4a2b5981e31e174c7bb_53702_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="new bing answer"
class="gallery-image"
data-flex-grow="133"
data-flex-basis="321px"
>&lt;/p>
&lt;p>除此之外，new bing还有一些其他特色功能：&lt;/p>
&lt;ul>
&lt;li>你可以通过语音输入或输出与它交流。&lt;/li>
&lt;li>你可以通过扫描二维码或拍摄图片进行图像搜索。&lt;/li>
&lt;li>你可以通过点击右上角菜单按钮切换语言或主题。&lt;/li>
&lt;li>你可以通过点击左下角聊天按钮与它进行更深入地对话。&lt;/li>
&lt;/ul>
&lt;h2 id="体验感受">体验感受&lt;/h2>
&lt;p>在使用了几天后，我对new bing非常满意和惊喜。它不仅能够满足我的各种信息需求，还能够陪我打发无聊时光。以下是我对它的一些评价：&lt;/p>
&lt;ul>
&lt;li>new bing非常智能和灵活。它能够理解我的意图和情感，并给出合适和有趣的回应。它也能够处理复杂和模糊的问题，并从多个来源整合信息并生成答案。&lt;/li>
&lt;li>new bing非常人性化和友好。它有着幽默感和创造力，并能够与我进行轻松愉快的聊天。它也能够根据我的喜好和兴趣，给出一些有用和有趣的建议。&lt;/li>
&lt;li>new bing非常全面和高效。它能够覆盖各个领域和主题，并给出最新、最准确、最权威的信息。它也能够节省我的时间和精力，让我一次性得到完整的答案，而不需要浏览多个网页。&lt;/li>
&lt;/ul>
&lt;p>总之，new bing是一个值得尝试的搜索引擎，它不仅是一个工具，还是一个伙伴。我相信随着技术的进步和用户的反馈，new bing会变得更加强大和完善。如果你也想体验new bing，请赶快申请限量预览吧！&lt;/p>
&lt;blockquote>
&lt;p>博主注:&lt;br>
new bing 自吹起来还是挺厉害的，哈哈&lt;/p>
&lt;/blockquote>
&lt;h2 id="后记">后记&lt;/h2>
&lt;p>截止发文前，微软给 new bing 做了单次5/每日50轮对话的限制，看得出来微软确实是想让 ChatGPT 服务于真正的搜索需求，降低无用的资源消耗。&lt;/p>
&lt;p>希望国内的类 ChatGPT 产品也尽早面世，在各行各业发光发热。:P&lt;/p></description></item><item><title>升级MacOS12.x(Monterey)后sudo失效问题及解决方式</title><link>https://i-square.github.io/p/Problem-and-solution-of-sudo-unavailability-after-upgrading-to-MacOS12.xMonterey/</link><pubDate>Mon, 17 Oct 2022 20:43:45 +0800</pubDate><guid>https://i-square.github.io/p/Problem-and-solution-of-sudo-unavailability-after-upgrading-to-MacOS12.xMonterey/</guid><description>&lt;img src="https://i-square.github.io/p/Problem-and-solution-of-sudo-unavailability-after-upgrading-to-MacOS12.xMonterey/macOS-Monterey-on-MBP-Feature.webp" alt="Featured image of post 升级MacOS12.x(Monterey)后sudo失效问题及解决方式" />&lt;h2 id="问题">问题&lt;/h2>
&lt;p>升级到 MacOS Monterey 以后会强行恢复 sudoers 文件到默认状态，即使用户在 admin 组里也无法使用 sudo&lt;/p>
&lt;p>当然，此时也是无法修改 sudoers 文件的&lt;/p>
&lt;h2 id="过程">过程&lt;/h2>
&lt;p>在谷歌搜索了一下，果然已经有人遇到了类似问题，在解决过程中参考了外网的3篇帖子&lt;/p>
&lt;h3 id="尝试">尝试&lt;/h3>
&lt;p>首先找到了这篇帖子： &lt;a class="link" href="https://www.reddit.com/r/MacOS/comments/rd0w69/upgraded_to_monterey_1201_now_user_not_in_sudoers/" target="_blank" rel="noopener"
>r/MacOS&lt;/a>，虽然没有解决问题，但从中学到了从Finder里直接拷贝系统文件的方法，需要权限时会弹框确认（指纹or密码）&lt;/p>
&lt;ol>
&lt;li>&lt;code>SHIFT + CMD + .&lt;/code> 显示隐藏文件&lt;/li>
&lt;li>拷贝 &lt;code>/etc/sudoers&lt;/code> 文件到可编辑目录&lt;/li>
&lt;li>修改文件，加入我的用户（比如user）和免密设置，如下&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">##&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># User specification&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">root &lt;span class="nv">ALL&lt;/span>&lt;span class="o">=(&lt;/span>ALL:ALL&lt;span class="o">)&lt;/span> ALL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">user &lt;span class="nv">ALL&lt;/span>&lt;span class="o">=(&lt;/span>ALL:ALL&lt;span class="o">)&lt;/span> NOPASSWD:ALL
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">##&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>再从 Finder 里直接拷贝修改后的问题替换原文件&lt;/li>
&lt;li>此时执行 sudo 命令仍然会报错 &lt;code>sudo: /etc/sudoers is owned by uid xxx, should be 0&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="解决uid问题">解决uid问题&lt;/h3>
&lt;p>之后又在 &lt;a class="link" href="https://apple.stackexchange.com/questions/157772/sudo-etc-sudoers-is-owned-by-uid-501-should-be-0" target="_blank" rel="noopener"
>StackExchange&lt;/a> 里学到了两种方式解决这个问题：&lt;/p>
&lt;ol>
&lt;li>开机按 &lt;code>CMD + S&lt;/code> 进入 recovery 模式，以root权限执行如下命令后，即可解决&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mount -uw /
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chown root:wheel /etc/sudoers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod &lt;span class="m">440&lt;/span> /etc/sudoers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">reboot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>利用 Apple Script 修改文件权限，弹框确认权限（指纹or密码）&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">osascript -e &lt;span class="s1">&amp;#39;do shell script &amp;#34;chown root:wheel /etc/sudoers; chmod 440 /etc/sudoers; chmod -N /etc/sudoers&amp;#34; with administrator privileges&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="后记">后记&lt;/h2>
&lt;p>事实上，完全可以直接用Apple Script修改 &lt;code>/etc/sudoers&lt;/code> 文件，比如 &lt;a class="link" href="https://dev.to/rezende79/user-is-not-in-the-sudoers-file-after-monterey-upgrade-3e4p" target="_blank" rel="noopener"
>这篇文章&lt;/a> 里提到的方式&lt;/p>
&lt;p>创建一个 &lt;code>/tmp/sudoers&lt;/code> 文件，按需修改，然后直接替换 &lt;code>/etc/sudoers&lt;/code> 文件即可，如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">osascript -e &lt;span class="s1">&amp;#39;do shell script &amp;#34;cat /tmp/sudoers &amp;gt; /etc/sudoers; chown root:wheel /etc/sudoers&amp;#34; with administrator privileges&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>高效冲浪指北</title><link>https://i-square.github.io/p/Guide-to-Efficient-Surfing/</link><pubDate>Thu, 25 Aug 2022 17:55:27 +0800</pubDate><guid>https://i-square.github.io/p/Guide-to-Efficient-Surfing/</guid><description>&lt;img src="https://i-square.github.io/p/Guide-to-Efficient-Surfing/wave-riding.svg" alt="Featured image of post 高效冲浪指北" />&lt;h2 id="引言">引言&lt;/h2>
&lt;h3 id="分享内容">分享内容&lt;/h3>
&lt;ul>
&lt;li>工具推荐&lt;/li>
&lt;li>方法分享&lt;/li>
&lt;li>开拓思路&lt;/li>
&lt;/ul>
&lt;h3 id="如何高效">如何高效？&lt;/h3>
&lt;ul>
&lt;li>聚焦：摒除杂质&lt;/li>
&lt;li>有序：有条不紊&lt;/li>
&lt;li>简化：化繁为简&lt;/li>
&lt;/ul>
&lt;h2 id="浏览器">浏览器&lt;/h2>
&lt;h3 id="发展史">发展史&lt;/h3>
&lt;h4 id="内核">内核&lt;/h4>
&lt;ul>
&lt;li>Trident（IE） -&amp;gt; EdgeHTML（早期edge）&lt;/li>
&lt;li>KHTML -&amp;gt; WebKit （早期Safari）&lt;/li>
&lt;li>↘ Chromium（早期chrome）-&amp;gt; Blink（后期chrome等）&lt;/li>
&lt;li>↘ WebKit2（后期Safari）&lt;/li>
&lt;li>Gecko（早期firefox） -&amp;gt; Servo&lt;/li>
&lt;li>Presto（早期opera）&lt;/li>
&lt;/ul>
&lt;h4 id="浏览器大战">浏览器大战&lt;/h4>
&lt;ul>
&lt;li>第一次大战：垄断之战
&lt;ul>
&lt;li>Netscape Navigator&lt;/li>
&lt;li>Internet Explorer&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>第二次大战：标准之战
&lt;ul>
&lt;li>IE&lt;/li>
&lt;li>Opera&lt;/li>
&lt;li>Firefox&lt;/li>
&lt;li>Safari&lt;/li>
&lt;li>Chrome&lt;/li>
&lt;li>Maxthon&lt;/li>
&lt;li>Edge&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="扩展">扩展&lt;/h3>
&lt;h3 id="广告过滤">广告过滤&lt;/h3>
&lt;ul>
&lt;li>Adblock Plus/AdBlock&lt;/li>
&lt;li>uBlock Origin&lt;/li>
&lt;/ul>
&lt;h3 id="脚本管理">脚本管理&lt;/h3>
&lt;ul>
&lt;li>Greasemonkey&lt;/li>
&lt;li>Violentmonkey&lt;/li>
&lt;li>Tampermonkey&lt;/li>
&lt;/ul>
&lt;h3 id="网络代理">网络代理&lt;/h3>
&lt;ul>
&lt;li>AutoProxy&lt;/li>
&lt;li>SwitchyOmega&lt;/li>
&lt;/ul>
&lt;h3 id="键盘导航">键盘导航&lt;/h3>
&lt;ul>
&lt;li>Vimium&lt;/li>
&lt;li>Surfingkeys&lt;/li>
&lt;/ul>
&lt;h2 id="实用工具">实用工具&lt;/h2>
&lt;h3 id="全局广告过滤">全局广告过滤&lt;/h3>
&lt;h4 id="路由器openwrt">路由器(OpenWrt)&lt;/h4>
&lt;ul>
&lt;li>Adbyby&lt;/li>
&lt;li>KoolProxy&lt;/li>
&lt;/ul>
&lt;h4 id="桌面端">桌面端&lt;/h4>
&lt;ul>
&lt;li>hosts&lt;/li>
&lt;li>AdGuard&lt;/li>
&lt;/ul>
&lt;h3 id="全局代理管理">全局代理管理&lt;/h3>
&lt;ul>
&lt;li>系统代理&lt;/li>
&lt;li>Proxifier&lt;/li>
&lt;/ul>
&lt;h3 id="全局手势">全局手势&lt;/h3>
&lt;h4 id="鼠标手势">鼠标手势&lt;/h4>
&lt;ul>
&lt;li>Win：WGestures/StrokesPlus&lt;/li>
&lt;li>Ubuntu：EasyStroke&lt;/li>
&lt;/ul>
&lt;h4 id="触摸板手势">触摸板手势&lt;/h4>
&lt;ul>
&lt;li>Win：GestureSign&lt;/li>
&lt;li>Mac：Jitouch&lt;/li>
&lt;/ul>
&lt;h3 id="多任务管理">多任务管理&lt;/h3>
&lt;ul>
&lt;li>单机：多桌面+单桌面任务聚焦&lt;/li>
&lt;li>多机
&lt;ul>
&lt;li>原则：扬长避短&lt;/li>
&lt;li>VSCode Remote、虚拟机、远程桌面&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="终端">终端&lt;/h2>
&lt;h4 id="模拟器">模拟器&lt;/h4>
&lt;ul>
&lt;li>Win：XShell/SecureCRT&lt;/li>
&lt;li>Mac：iTerm2
&lt;ul>
&lt;li>会话管理&lt;/li>
&lt;li>脚本管理&lt;/li>
&lt;li>分屏（显示共用，多终端）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="zsh">zsh&lt;/h4>
&lt;ul>
&lt;li>配置：oh my zsh&lt;/li>
&lt;li>主题：powerlevel10k&lt;/li>
&lt;/ul>
&lt;h4 id="tmux">tmux&lt;/h4>
&lt;ul>
&lt;li>终端复用&lt;/li>
&lt;li>Tmux Plugin Manager
&lt;ul>
&lt;li>会话恢复：tmux-resurrect&lt;/li>
&lt;li>会话保存：tmux-continuum&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="docker">docker&lt;/h4>
&lt;ul>
&lt;li>环境隔离&lt;/li>
&lt;li>轻量化&lt;/li>
&lt;li>微服务&lt;/li>
&lt;li>k8s&lt;/li>
&lt;/ul>
&lt;h4 id="shell脚本">shell脚本&lt;/h4>
&lt;ul>
&lt;li>grep&lt;/li>
&lt;li>awk&lt;/li>
&lt;li>sed&lt;/li>
&lt;/ul></description></item><item><title>使用expect脚本一键登录跳板机</title><link>https://i-square.github.io/p/login-to-the-springboard-machine-easily-by-expect-script/</link><pubDate>Fri, 18 Mar 2022 17:34:07 +0800</pubDate><guid>https://i-square.github.io/p/login-to-the-springboard-machine-easily-by-expect-script/</guid><description>&lt;img src="https://i-square.github.io/p/login-to-the-springboard-machine-easily-by-expect-script/login.svg" alt="Featured image of post 使用expect脚本一键登录跳板机" />&lt;h2 id="背景">背景&lt;/h2>
&lt;p>为了安全，多数公司会采用跳板机的方式访问内网服务器，登录需要输入AD密码和谷歌验证码，非常繁琐，这里提供一个基于expect脚本的方法，实现一键登录跳板机&lt;/p>
&lt;blockquote>
&lt;p>注：笔者在 MacOS 和 Ubuntu20.04 环境下测试ok，其他环境大同小异，按需修改即可。&lt;/p>
&lt;/blockquote>
&lt;h2 id="方法">方法&lt;/h2>
&lt;p>此方式思路是利用expect脚本交互式输入预设的AD密码，输入实时获取的谷歌验证码（使用 python authenticator 工具）&lt;/p>
&lt;h3 id="所需依赖">所需依赖&lt;/h3>
&lt;p>安装以下工具，各平台安装方法请自行搜索：&lt;/p>
&lt;ul>
&lt;li>expect&lt;/li>
&lt;li>python&lt;/li>
&lt;li>pip&lt;/li>
&lt;li>authenticator&lt;/li>
&lt;/ul>
&lt;h2 id="authenticator配置">authenticator配置&lt;/h2>
&lt;h3 id="安装">安装&lt;/h3>
&lt;p>&lt;code>pip install authenticator&lt;/code> 若不成功，请先升级pip到最新版本&lt;/p>
&lt;h3 id="配置">配置&lt;/h3>
&lt;ol>
&lt;li>执行 &lt;code>authenticator add $user&lt;/code>（AD账号无邮箱后缀）&lt;/li>
&lt;li>提示 &lt;code>Enter passphrase&lt;/code> 这里输入2次AD密码&lt;/li>
&lt;li>提示 &lt;code>Enter shared secret&lt;/code> 需要把谷歌验证码的字符串输入到这里&lt;/li>
&lt;li>到这里就配置ok了，执行 &lt;code>authenticator generate&lt;/code> ，输入AD密码，看到谷歌验证码正常输出就是成功了&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>配置完成之后就可以使用expect脚本来自动登录了&lt;/p>
&lt;/blockquote>
&lt;h3 id="注意点">注意点&lt;/h3>
&lt;p>多数公司的AD密码可能需要每隔一段时间更新一次，在更新AD密码后，使用 &lt;code>authenticator&lt;/code> 仍然需要输入旧密码，所以下述脚本内相应的做了一下兼容&lt;/p>
&lt;h2 id="expect脚本">expect脚本&lt;/h2>
&lt;h3 id="脚本">脚本&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/usr/bin/expect
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> timeout &lt;span class="m">1000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> USERNAME xxx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> PASSWORD_GEN xxxx &lt;span class="c1"># 首次配置 authenticator 时使用的密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> PASSWORD xxxxxxxx &lt;span class="c1"># AD密码，每隔 xx 天更新一次&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> JUMP_ZONE zone &lt;span class="c1"># 假如跳板机区分区域&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> LINK_TYPE ssh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> DOMAIN example.com &lt;span class="c1"># 登录域名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 判断是否是 vscode 云端环境&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="nv">$JUMP_ZONE&lt;/span> !&lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;vscode&amp;#34;&lt;/span>&lt;span class="o">}&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">set&lt;/span> main_response &lt;span class="s2">&amp;#34;Opt&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">set&lt;/span> main_response &lt;span class="s2">&amp;#34;Ip:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">spawn authenticator generate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">expect &lt;span class="s2">&amp;#34;passphrase:&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">send &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$PASSWORD_GEN&lt;/span>&lt;span class="s2">\r&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">expect &lt;span class="s2">&amp;#34;seconds&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> found &lt;span class="o">[&lt;/span>regexp &lt;span class="o">{([&lt;/span>0-9&lt;span class="o">]{&lt;/span>6&lt;span class="o">})}&lt;/span> &lt;span class="nv">$expect_out&lt;/span>&lt;span class="o">(&lt;/span>buffer&lt;span class="o">)&lt;/span> match verify_code&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="nv">$found&lt;/span> &lt;span class="o">==&lt;/span> 1&lt;span class="o">}&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> send &lt;span class="se">\x&lt;/span>&lt;span class="m">03&lt;/span> &lt;span class="c1"># 发送 Ctrl-C 结束 authenticator 进程&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> puts &lt;span class="s2">&amp;#34;invalid verification code&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">exit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">spawn &lt;span class="si">${&lt;/span>&lt;span class="nv">LINK_TYPE&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">USERNAME&lt;/span>&lt;span class="si">}&lt;/span>@jump-&lt;span class="si">${&lt;/span>&lt;span class="nv">JUMP_ZONE&lt;/span>&lt;span class="si">}&lt;/span>.&lt;span class="si">${&lt;/span>&lt;span class="nv">DOMAIN&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">expect &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;yes/no&amp;#34;&lt;/span> &lt;span class="o">{&lt;/span> send &lt;span class="s2">&amp;#34;yes\r&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> exp_continue &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;Verification code:&amp;#34;&lt;/span> &lt;span class="o">{&lt;/span> send &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$verify_code&lt;/span>&lt;span class="s2">\r&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> exp_continue &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;assword:&amp;#34;&lt;/span> &lt;span class="o">{&lt;/span> send &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$PASSWORD&lt;/span>&lt;span class="s2">\r&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> exp_continue &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;MFA auth&amp;#34;&lt;/span> &lt;span class="o">{&lt;/span> send &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$verify_code&lt;/span>&lt;span class="s2">\r&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> exp_continue &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">$main_response&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">interact
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="使用">使用&lt;/h3>
&lt;ol>
&lt;li>把脚本开头的几个变量设置一下，或者自己修改为从argv里读取
&lt;ul>
&lt;li>&lt;code>USERNAME&lt;/code> AD账户不带邮箱后缀&lt;/li>
&lt;li>&lt;code>PASSWORD&lt;/code> AD密码&lt;/li>
&lt;li>&lt;code>JUMP_ZONE&lt;/code> 是跳板机的区域代码，按需&lt;/li>
&lt;li>&lt;code>LINK_TYPE&lt;/code> 是连接协议，比如 &lt;code>ssh | sftp&lt;/code>，按需&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>假设保存文件为 &lt;code>~/jump_ssh.exp&lt;/code>&lt;/li>
&lt;li>执行脚本即可自动化登录到跳板机 &lt;code>expect ~/jump_ssh.exp&lt;/code>
&lt;ol>
&lt;li>也可以给脚本加上可执行权限 &lt;code>chmod a+x ~/jump_ssh.exp&lt;/code>&lt;/li>
&lt;li>然后直接执行即可 &lt;code>~/jump_ssh.exp&lt;/code>&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol></description></item></channel></rss>