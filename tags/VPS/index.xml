<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>VPS on 平方君的后花园</title><link>https://i-square.github.io/tags/VPS/</link><description>Recent content in VPS on 平方君的后花园</description><generator>Hugo -- gohugo.io</generator><language>zh-Hans</language><lastBuildDate>Mon, 06 Mar 2017 09:24:30 +0000</lastBuildDate><atom:link href="https://i-square.github.io/tags/VPS/index.xml" rel="self" type="application/rss+xml"/><item><title>增强VPS安全性的常用方法</title><link>https://i-square.github.io/p/Common-Ways-to-Enhance-VPS-Security/</link><pubDate>Mon, 06 Mar 2017 09:24:30 +0000</pubDate><guid>https://i-square.github.io/p/Common-Ways-to-Enhance-VPS-Security/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>因为之前一篇文章 &lt;a class="link" href="https://i-square.github.io/post/VPS%E6%90%AD%E5%BB%BAShadowsocks%E6%9C%8D%E5%8A%A1%E5%92%8C%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0/" >VPS搭建Shadowsocks服务和优化笔记&lt;/a> 中提到的目的，我入手了 &lt;code>DigitalOcean&lt;/code> 的VPS，由于刚刚接触VPS，对于VPS的安全性并没有什么概念，所以我直接使用一个汉化版PuTTY客户端，以root账户在22端口登录的，刚开始登录几次都没出现什么状况，然而隔天登录的时候就出现了类似以下的提示，这才让我产生了要提高VPS安全性的想法。&lt;/p>
&lt;!-- more -->
&lt;blockquote>
&lt;p>Last failed login: Tue Feb 10 23:32:08 EST 2017 from static-15-64-34.rpnspl.com on ssh:notty
There were 166 failed login attempts since the last successful login.
Last login: Tue Feb 10 18:54:37 2017 from &lt;code>ip&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>这里的 &lt;code>ip&lt;/code> 并不是我的IP地址，也就是说有人(或机器人)在恶意试探我的VPS密码。看到这提示，我马上上谷歌搜索，发现这个现象非常普遍，多数都是被机器人扫描然后试图暴力破解，如果不加以防范，代价会很大。&lt;/p>
&lt;p>我在查问题的时候发现，PuTTY官方并没有提供中文版本，所以网上的汉化版有可能被植入后门，非常不安全，所以在此提醒，这一类涉及重要密码的软件&lt;strong>绝对不要&lt;/strong>用民间汉化版！&lt;/p>
&lt;p>那么如何知道自己的VPS账号正在遭受扫描和暴力破解呢？简单的方法就是查看日志：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看登录成功的用户信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">last
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 最新的登录记录在最前面，所以可以用以下命令来查看。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">last &lt;span class="p">|&lt;/span> less
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看登录失败的用户信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">lastb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看登录日志&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tail /var/log/secure
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>也可以执行以下命令，查询出来的结果中包含了&lt;code>ip地址=数量&lt;/code>就是攻击者信息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat /var/log/secure&lt;span class="p">|&lt;/span>awk &lt;span class="s1">&amp;#39;/Failed/{print $(NF-3)}&amp;#39;&lt;/span>&lt;span class="p">|&lt;/span>sort&lt;span class="p">|&lt;/span>uniq -c&lt;span class="p">|&lt;/span>awk &lt;span class="s1">&amp;#39;{print $2&amp;#34;=&amp;#34;$1;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如何来增强VPS账号的安全性呢？除了养成使用正规软件的好习惯外，还要从VPS本身来加强VPS账号的安全性。&lt;/p>
&lt;ul>
&lt;li>Linux有一个自动统计VPS登录错误的工具： &lt;code>Denyhosts&lt;/code> ，一旦登录VPS账号错误次数超过了 &lt;code>Denyhosts&lt;/code> 的安全设置， &lt;code>Denyhosts&lt;/code> 就会将该IP记录下来，同时将其放入黑名单当中，禁止该IP在某一段时间内继续访问VPS，通过它可以实现自动封锁恶意IP&lt;/li>
&lt;li>默认的SSH端口是22，通过修改自己的SSH端口先为扫描者增加一道端口门槛&lt;/li>
&lt;li>VPS默认的账号是root，如果我们禁用了root，那么要攻破账号又得先暴力猜测VPS的账号，难度又增加几分&lt;/li>
&lt;li>如果还不放心，我们可以直接禁用密码登录验证VPS的方式，改用密钥登录，这样安全系数是相当高了&lt;/li>
&lt;/ul>
&lt;p>&lt;em>注：本人主机为CentOS 7 x64系统，以下内容均基于此环境&lt;/em>&lt;/p>
&lt;h2 id="denyhosts攻击">Denyhosts攻击&lt;/h2>
&lt;ol>
&lt;li>Linux各平台现在基本上都可以直接安装Denyhosts了，直接运行命令安装&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum install denyhosts
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>
&lt;p>安装好了Denyhosts，默认的配置基本上就可以防御一定的暴力攻击了， &lt;code>/etc/hosts.deny&lt;/code> 文件里保存了被屏蔽的记录。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果你要自定义Denyhosts的相关配置，执行： &lt;code>vi /etc/denyhosts.conf&lt;/code> ，相关参数的说明可以自行搜索，一般用户默认即可。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="修改ssh端口">修改SSH端口&lt;/h2>
&lt;p>输入命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vi /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>编辑SSH服务的配置文件，找到 &lt;code>#port 22&lt;/code> ，将前面的 &lt;code>#&lt;/code> 去掉，然后将 &lt;code>22&lt;/code> 修改为你自己设定的端口号，如 &lt;code>12345&lt;/code> ，保存后重启SSH服务以使配置生效&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart sshd.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="禁用root账户">禁用Root账户&lt;/h2>
&lt;p>禁用root账户之前，必须先新建一个新的账户。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">useradd user &lt;span class="c1">#添加用户名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">passwd user &lt;span class="c1">#为user用户设置密码&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后编辑配置文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vi /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>找到里面的 &lt;code>PermitRootLogin yes&lt;/code> ，将后面的 &lt;code>yes&lt;/code> 改成 &lt;code>no&lt;/code> ，如果没有这一行则直接加入即可。保存后重启SSH服务以使配置生效&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart sshd.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用密钥登录">使用密钥登录&lt;/h2>
&lt;h3 id="生成密钥">生成密钥&lt;/h3>
&lt;p>SSH登录方式有账号+密码和密钥认证两种形式，为了阻止暴力破解VPS的账号和密码，我们可以放弃密码验证的方式，改用密钥文件验证。&lt;/p>
&lt;p>以&lt;strong>普通用户&lt;/strong>(如user)执行以下命令，在VPS上生成密钥文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ssh-keygen -t rsa
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>生成密钥时会询问你密钥保存的位置，默认是 &lt;code>/username/.ssh&lt;/code> ，保持默认即可，你还可以为你的密钥设置一个密码，默认为空。&lt;/p>
&lt;p>密钥生成后，进入密钥存放的目录中，执行以下命令，将公钥生成一个新的文件。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">cat id_rsa.pub &amp;gt;&amp;gt; authorized_keys
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将id-rsa这个私钥文件用winSCP下载到本地，打开PuTTYGen软件，执行Conversions-&amp;gt;Import Key，导入这个私钥文件，然后选择Save private key，这时会在本地生成一个PPK文件，在PuTTY的 &lt;code>Connection/SSH/Auth&lt;/code> 中选择刚刚保存的PPK文件，以后即可用密钥认证登录VPS了。&lt;/p>
&lt;h3 id="centos-7权限问题">CentOS 7权限问题&lt;/h3>
&lt;p>CentOS 7系统下，用户user的home目录： &lt;code>/home/user&lt;/code> 的权限变成了 &lt;code>777&lt;/code> ，造成不能正常登陆SSH，报如下错误： &lt;code>Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password)&lt;/code>&lt;/p>
&lt;p>SSH对公钥、私钥的权限和所有权的要求是非常严格的，总结如下：
1、下面两个目录的所有权必须是 &lt;code>user&lt;/code> ，所属组也应该是 &lt;code>user&lt;/code> ，权限必须为 &lt;code>700&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>/home/user
/home/user/.ssh&lt;/p>
&lt;/blockquote>
&lt;p>2、下面公钥文件的所有权必须是 &lt;code>user&lt;/code> ，所属组也应该是 &lt;code>user&lt;/code> ，权限必须为 &lt;code>644&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>/home/user/.ssh/authorized_keys&lt;/p>
&lt;/blockquote>
&lt;p>3、下面私钥文件的所有权必须是 &lt;code>user&lt;/code> ，所属组也应该是 &lt;code>user&lt;/code> ，权限必须是 &lt;code>600&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>/home/user/.ssh/id_rsa&lt;/p>
&lt;/blockquote>
&lt;p>接着上面的操作，这次需要获取root权限，首先输入命令 &lt;code>su&lt;/code> 再输入root密码获取root权限，然后依次执行以下命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">mkdir /etc/ssh/user
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp /home/user/.ssh/authorized_keys /etc/ssh/user/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod &lt;span class="m">755&lt;/span> /etc/ssh/user
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod &lt;span class="m">600&lt;/span> /etc/ssh/user/authorized_keys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chown -R user:user /etc/ssh/user
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>编辑SSH配置文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vi /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>找到 &lt;code>AuthorizedKeysFile&lt;/code> 这项(如果没有则添加)，修改为&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">AuthorizedKeysFile /etc/ssh/%u/authorized_keys
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>保存后重启SSH服务以使配置生效&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart sshd.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="禁止密码登录">禁止密码登录&lt;/h3>
&lt;p>&lt;strong>注意：请确认你已经可以通过密钥认证的方式登录VPS&lt;/strong>&lt;/p>
&lt;p>有了密钥登录VPS，我们就可以禁止用密码登录这种验证方式了，还是
编辑SSH配置文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vi /etc/ssh/sshd_config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>找到 &lt;code>PasswordAuthentication&lt;/code> (没有则添加)并修改后面的 &lt;code>yes&lt;/code> 为 &lt;code>no&lt;/code> ，保存后重启SSH服务以使配置生效&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl restart sshd.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="小结">小结&lt;/h2>
&lt;p>通过以上这些措施可以有效防范暴力破解VPS，平时使用官方软件也是提升安全性的一大举措，总而言之，没有绝对的安全，但是只要我们平时稍加留心就不会给破解者可乘之机。&lt;/p>
&lt;blockquote>
&lt;p>参考链接：
&lt;a class="link" href="https://www.freehao123.com/vps-ssh/" target="_blank" rel="noopener"
>https://www.freehao123.com/vps-ssh/&lt;/a>
&lt;a class="link" href="http://www.cnblogs.com/jxterminator/p/4105545.html" target="_blank" rel="noopener"
>http://www.cnblogs.com/jxterminator/p/4105545.html&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>VPS搭建Shadowsocks服务和优化笔记</title><link>https://i-square.github.io/p/Deploy-and-optimize-Shadowsocks-service-on-VPS/</link><pubDate>Tue, 28 Feb 2017 11:43:59 +0000</pubDate><guid>https://i-square.github.io/p/Deploy-and-optimize-Shadowsocks-service-on-VPS/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>由于最近开始上Github较多，无意中发现Github推出了一个&lt;a class="link" href="https://education.github.com/pack" target="_blank" rel="noopener"
>学生开发者优惠大礼包&lt;/a>，这对于囊中羞涩的学生来说真的是大大的福利，给Github一个大大的赞！&lt;/p>
&lt;p>这个优惠包里头包含很多开发者需要付费购买的服务或者工具的优惠券，其中有一个&lt;a class="link" href="https://www.digitalocean.com/" target="_blank" rel="noopener"
>DigitalOcean&lt;/a>的$50优惠券，对于一直想入一台VPS但又因为价格昂贵望而却步的我来说就是雪中送炭啊，于是我马上注册获取优惠券，随即开始折腾，这里把这两天折腾的过程记录一下。&lt;/p>
&lt;!-- more -->
&lt;h2 id="前期准备">前期准备&lt;/h2>
&lt;ul>
&lt;li>一台运行CentOS 7 x64系统的主机&lt;/li>
&lt;li>&lt;a class="link" href="http://www.putty.org/" target="_blank" rel="noopener"
>PuTTY&lt;/a>，Windows系统下登录远程主机的工具，一定要去官网下载，一些所谓的汉化版会夹带私货&lt;/li>
&lt;li>&lt;a class="link" href="https://winscp.net/eng/download.php" target="_blank" rel="noopener"
>winSCP&lt;/a>，Windows系统下管理远程主机文件的工具，也去官网下载&lt;/li>
&lt;/ul>
&lt;p>说明：VPS是必不可少的，(附&lt;a class="link" href="https://www.digitalocean.com/?refcode=ef0a405dfe82" target="_blank" rel="noopener"
>我的digitalocean推介码&lt;/a>，注册即可获赠$10)，PuTTY用来在Windows系统下远程登录VPS，winSCP会用来下载密钥。&lt;/p>
&lt;h2 id="shadowsocks配置">Shadowsocks配置&lt;/h2>
&lt;p>首先使用PuTTY登录到你的VPS，方法就不赘述了，登录后切换到root账户。&lt;/p>
&lt;h3 id="安装shadowsocks服务">安装shadowsocks服务&lt;/h3>
&lt;p>一步一步执行以下命令，可以复制后在PuTTY中点击鼠标右键粘贴，回车执行，如询问(Y/N)，则输入Y回车。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum install epel-release
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yum update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yum install python-setuptools
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">easy_install pip
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip install shadowsocks
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>以上命令执行完之后，shadowsocks已安装到你的VPS中，但还没有运行。&lt;/p>
&lt;h3 id="配置shadowsocks服务">配置shadowsocks服务&lt;/h3>
&lt;p>运行shadowsocks需要一个配置文件，我们在/etc目录下新建一个配置文件。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vi /etc/shadowsocks.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>按键盘i建进入编辑模式，复制以下内容，然后直接右键粘贴。请改“端口号”为你需要的端口号，范围1 ~ 65535，改“你的密码”为你自己的密码。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;server&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;0.0.0.0&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;server_port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="err">端口号&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;local_address&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;127.0.0.1&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;local_port&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">1080&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;你的密码&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;timeout&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">500&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;method&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="s2">&amp;#34;aes-256-cfb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;fast_open&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>粘贴后，按键盘Esc键退出编辑模式，输入:wq回车，保存并退出。&lt;br>
上面这些参数应该不用多说了，用shadowsocks的都懂的。&lt;br>
最后一项 &lt;code>fast_open&lt;/code> 表示是否使用 &lt;code>TCP_FASTOPEN&lt;/code> （后面优化部分会打开系统的TCP_FASTOPEN，所以这里填true，否则填false)&lt;/p>
&lt;h2 id="supervisor监控进程">Supervisor监控进程&lt;/h2>
&lt;p>配置好shadowsocks之后我们需要后台自启动服务，虽然目前shadowsocks自己也可以后台运行，但是如果有一个监控进程能在shadowsocks进程挂了之后重新启动它就更好了，supervisor就是用来监控进程的工具。&lt;/p>
&lt;h3 id="安装supervisor">安装supervisor&lt;/h3>
&lt;p>运行以下命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum install python-setuptools supervisor
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">easy_install supervisor
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="配置supervisor">配置supervisor&lt;/h3>
&lt;p>以上命令执行完之后，supervisor已经安装，然后我们编辑 &lt;code>/etc/supervisord.conf&lt;/code> 文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vi /etc/supervisord.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>按键盘i建进入编辑模式，光标移到底部空行处，如没空行就在末尾回车加入空行，复制以下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="k">[program:shadowsocks]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">command&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">ssserver -c /etc/shadowsocks.json&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">autostart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">autorestart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">restartretries&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">user&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">nobody&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>复制完成后，回个车，为底部再留下空行，按键盘Esc键退出编辑模式，输入 &lt;code>:wq&lt;/code> 回车，保存并退出。这样就完成了supervisor监控shadowsocks进程的配置，接下来需要让supervisor开机启动，这样才能达到我们的目的。&lt;/p>
&lt;h3 id="supervisor开机自启">supervisor开机自启&lt;/h3>
&lt;p>所幸，CentOS 7下supervisor开机启动非常的容易，&lt;a class="link" href="https://github.com/Supervisor/initscripts" target="_blank" rel="noopener"
>User-contributed OS init scripts for Supervisor&lt;/a>，这个Github项目提供各个系统下的supervisor服务开机启动脚本，其中&lt;a class="link" href="https://raw.githubusercontent.com/Supervisor/initscripts/master/centos-systemd-etcs" target="_blank" rel="noopener"
>centos-systemd-etcs&lt;/a>就是我们需要的CentOS 7下面的脚本。&lt;/p>
&lt;p>建议直接复制脚本内容，然后添加到目录/etc/systemd/system下。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">vi /etc/systemd/system/supervisord.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>按键盘i建进入编辑模式，粘贴脚本内容后按键盘Esc键退出编辑模式，输入:wq回车，保存并退出。&lt;br>
然后运行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">systemctl &lt;span class="nb">enable&lt;/span> supervisord.service
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>就完成了supervisor的开机启动，到此Shadowsocks已经在CentOS 7 x64下安装配置成功，运行命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">reboot
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>重启服务器使服务生效，此时已经可以正常使用Shadowsocks服务。&lt;/p>
&lt;h2 id="shadowsocks服务优化">Shadowsocks服务优化&lt;/h2>
&lt;h3 id="系统层面">系统层面&lt;/h3>
&lt;p>基于kvm架构vps的优化(DO的主机正好可以用)&lt;/p>
&lt;h4 id="优化内核参数">优化内核参数&lt;/h4>
&lt;p>&lt;code>vi /etc/sysctl.conf&lt;/code> 直接把以下内容复制粘贴进去&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># max open files
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fs.file-max = 1024000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># max read buffer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.core.rmem_max = 67108864
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># max write buffer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.core.wmem_max = 67108864
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># default read buffer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.core.rmem_default = 65536
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># default write buffer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.core.wmem_default = 65536
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># max processor input queue
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.core.netdev_max_backlog = 4096
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># max backlog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.core.somaxconn = 4096
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># resist SYN flood attacks
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.ipv4.tcp_syncookies = 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># reuse timewait sockets when safe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.ipv4.tcp_tw_reuse = 1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># turn off fast timewait sockets recycling
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.ipv4.tcp_tw_recycle = 0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># short FIN timeout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.ipv4.tcp_fin_timeout = 30
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># short keepalive time
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.ipv4.tcp_keepalive_time = 1200
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># outbound port range
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.ipv4.ip_local_port_range = 10000 65000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># max SYN backlog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.ipv4.tcp_max_syn_backlog = 4096
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># max timewait sockets held by system simultaneously
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.ipv4.tcp_max_tw_buckets = 5000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># TCP receive buffer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.ipv4.tcp_rmem = 4096 87380 67108864
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># TCP write buffer
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.ipv4.tcp_wmem = 4096 65536 67108864
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># turn on path MTU discovery
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.ipv4.tcp_mtu_probing = 1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>保存生效 &lt;code>sysctl -p&lt;/code>&lt;/p>
&lt;hr>
&lt;h4 id="tcp优化">TCP优化&lt;/h4>
&lt;ol>
&lt;li>修改文件句柄数限制
&lt;ul>
&lt;li>ubuntu/centos均可修改 &lt;code>/etc/sysctl.conf&lt;/code>&lt;/li>
&lt;li>找到 &lt;code>fs.file-max&lt;/code> 这一行，修改其值为 &lt;code>1024000&lt;/code> ，并保存退出。然后执行 &lt;code>sysctl -p&lt;/code> 使其生效&lt;/li>
&lt;li>修改 &lt;code>vi /etc/security/limits.conf&lt;/code> 文件，加入&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">* soft nofile 512000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">* hard nofile 1024000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>针对centos,还需要修改 &lt;code>vi /etc/pam.d/common-session&lt;/code> 文件，加入 &lt;code>session required pam_limits.so&lt;/code>&lt;/p>
&lt;ol start="2">
&lt;li>修改 &lt;code>vi /etc/profile&lt;/code> 文件
&lt;ul>
&lt;li>加入 &lt;code>ulimit -SHn 1024000&lt;/code>&lt;/li>
&lt;li>然后重启服务器执行 &lt;code>ulimit -n&lt;/code>&lt;/li>
&lt;li>查询返回1024000即可&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sysctl.conf报错解决方法
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">修复modprobe的：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -f /sbin/modprobe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /bin/true /sbin/modprobe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">修复sysctl的：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -f /sbin/sysctl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /bin/true /sbin/sysctl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;p>&lt;del>#### 锐速&lt;/del>&lt;br>
锐速官方已不再维护免费版本，目前破解版支持的内核太旧，放弃。&lt;/p>
&lt;hr>
&lt;h4 id="开启tcp-fast-open">开启TCP Fast Open&lt;/h4>
&lt;p>这个前提条件是需要服务器是Linux 3.7+的内核，如果满足条件，那就在服务端的 &lt;code>vi /etc/sysctl.conf&lt;/code> 文件中再加上一行。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"># turn on TCP Fast Open on both client and server side
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">net.ipv4.tcp_fastopen = 3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后记得把 &lt;code>vi /etc/shadowsocks.json&lt;/code> 配置文件中 &lt;code>&amp;quot;fast_open&amp;quot;:&lt;/code> 配置为 &lt;code>true&lt;/code> 这样速度也将会有非常显著的提升。&lt;/p>
&lt;hr>
&lt;h4 id="开启tcp-bbr拥塞控制算法">开启TCP BBR拥塞控制算法&lt;/h4>
&lt;p>BBR 目的是要尽量跑满带宽, 并且尽量不要有排队的情况, 效果并不比速锐差&lt;br>
Linux kernel 4.9 已支持 tcp_bbr 下面简单讲述如何开启&lt;/p>
&lt;ul>
&lt;li>下载更换内核&lt;br>
最新内核查看&lt;a class="link" href="http://elrepo.org/linux/kernel/el7/x86_64/RPMS/" target="_blank" rel="noopener"
>这里&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yum --enablerepo&lt;span class="o">=&lt;/span>elrepo-kernel install kernel-ml -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>查看内核是否安装成功&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rpm -qa &lt;span class="p">|&lt;/span> grep kernel
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>更新 grub 系统引导文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">vi /etc/default/grub
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>修改对应的字段为 GRUB_DEFAULT=0，然后重新编译启动项&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">grub2-mkconfig -o /boot/grub2/grub.cfg
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>删除旧内核(可选)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">yum remove kernel
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最后重启&lt;code>reboot&lt;/code>生效。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>注意，某些服务商可能需要首先将VPS配置为可自定义内核，然后grub2的配置才会生效。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>开启bbr&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>开机后 &lt;code>uname -r&lt;/code> 看看内核是不是最新的，至少要大于4.9&lt;/p>
&lt;p>执行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;net.core.default_qdisc=fq&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/sysctl.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;net.ipv4.tcp_congestion_control=bbr&amp;#34;&lt;/span> &amp;gt;&amp;gt; /etc/sysctl.conf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>保存生效&lt;br>
&lt;code>sysctl -p&lt;/code>&lt;/p>
&lt;p>执行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sysctl net.ipv4.tcp_available_congestion_control
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sysctl net.ipv4.tcp_congestion_control
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果结果都有&lt;code>bbr&lt;/code>, 则证明你的内核已开启bbr&lt;/p>
&lt;p>执行 &lt;code>lsmod | grep bbr&lt;/code>&lt;br>
看到有 tcp_bbr 模块即说明bbr已启动&lt;/p>
&lt;hr>
&lt;h3 id="加密层面">加密层面&lt;/h3>
&lt;h4 id="安装m2crypto">安装M2Crypto&lt;/h4>
&lt;p>这个可以提高SS的加密速度，安装办法:&lt;br>
先安装依赖包：&lt;br>
&lt;code>yum install -y openssl-devel gcc swig python-devel autoconf libtool&lt;/code>&lt;br>
安装setuptools:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">wget --no-check-certificate https://raw.githubusercontent.com/iMeiji/shadowsocks_install/master/ez_setup.py
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">python ez_setup.py install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>再通过pip安装M2Crypto: &lt;code>pip install M2Crypto&lt;/code> 或者 &lt;code>pip install M2Crypto --upgrade&lt;/code>&lt;/p>
&lt;hr>
&lt;h4 id="22-安装-gevent">2.2 安装 gevent&lt;/h4>
&lt;p>安装 gevent可以提高 Shadowsocks 的性能。&lt;/p>
&lt;p>CentOS&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">yum install -y libevent
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip install greenlet
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip install gevent
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;h4 id="使用chacha20加密算法">使用CHACHA20加密算法&lt;/h4>
&lt;p>首先，安装libsodium，让系统支持chacha20算法。&lt;/p>
&lt;p>CentOS&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">yum groupinstall &amp;#34;Development Tools&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">wget https://download.libsodium.org/libsodium/releases/LATEST.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar zxf LATEST.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cd libsodium*
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">vi /etc/ld.so.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">添加一行：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/lib
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">保存退出后，运行命令：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ldconfig
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后修改ss加密方式: &lt;code>vi /etc/shadowsocks.json&lt;/code>
&amp;ldquo;method&amp;rdquo;:&amp;ldquo;aes-256-cfb&amp;quot;改成&amp;quot;method&amp;rdquo;:&amp;ldquo;chacha20&amp;rdquo;.&lt;/p>
&lt;hr>
&lt;h3 id="网络层面">网络层面&lt;/h3>
&lt;p>此外，选择合适的端口也能优化梯子的速度，广大SS用户的实践经验表明，检查站（GFW）存在一种机制来降低自身的运算压力，即常用的协议端口（如http，smtp，ssh，https，ftp等）的检查较少，所以建议SS绑定这些常用的端口（如：21，22，25，80，443），速度也会有显著提升。&lt;br>
如果你还要给小伙伴爬，那我建议开启多个端口而不是共用，这样网络会更加顺畅。&lt;/p>
&lt;h4 id="防火墙设置如有">防火墙设置（如有）&lt;/h4>
&lt;p>自动调整MTU&lt;br>
&lt;code>iptables -I FORWARD -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu&lt;/code>&lt;/p>
&lt;p>开启 NAT （记得把 eth0 改成自己的网卡名）&lt;br>
&lt;code>iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE&lt;/code>&lt;/p>
&lt;p>开启 IPv4 的转发&lt;br>
&lt;code>sysctl -w net.ipv4.ip_forward=1&lt;/code>&lt;/p>
&lt;p>打开 443 端口&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">iptables -I INPUT -p tcp --dport 443 -j ACCEPT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">iptables -I INPUT -p udp --dport 443 -j ACCEPT
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>重启防火墙iptables：&lt;br>
&lt;code>service iptables restart&lt;/code>&lt;/p>
&lt;hr>
&lt;h2 id="结语">结语&lt;/h2>
&lt;p>至此，这几天配置shadowsocks的过程便结束了，这里只是将我遇到的情况加以记录，并不能涵盖所有情况，如果碰到其他状况，那么 &lt;code>google&lt;/code> 就好了。&lt;/p>
&lt;p>:P&lt;/p></description></item></channel></rss>