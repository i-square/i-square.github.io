<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>哈希 on 平方君的后花园</title><link>https://i-square.github.io/tags/%E5%93%88%E5%B8%8C/</link><description>Recent content in 哈希 on 平方君的后花园</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 07 Apr 2017 22:48:51 +0000</lastBuildDate><atom:link href="https://i-square.github.io/tags/%E5%93%88%E5%B8%8C/index.xml" rel="self" type="application/rss+xml"/><item><title>数据结构学习笔记（五）：散列</title><link>https://i-square.github.io/p/Data-structure-study-notes-5-hash/</link><pubDate>Fri, 07 Apr 2017 22:48:51 +0000</pubDate><guid>https://i-square.github.io/p/Data-structure-study-notes-5-hash/</guid><description>&lt;p>散列表（hash table）的实现通常称为散列（hashing），指用于以O(1)时间执行插入、删除和查找的技术，但不支持需要排序信息的树操作，比如findMin、findMax以及在线性时间内按顺序打印整个表都不支持&lt;/p>
&lt;h2 id="内容">内容&lt;/h2>
&lt;p>中心数据结构是&lt;strong>散列表&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>实现散列表的几种方法&lt;/li>
&lt;li>分析比较几种方法&lt;/li>
&lt;li>介绍散列的多种应用&lt;/li>
&lt;li>比较散列表与二叉查找树&lt;/li>
&lt;/ul>
&lt;h2 id="散列函数">散列函数&lt;/h2>
&lt;p>基本思想：将每个键(Key)映射到从[0, TableSize)这个范围中的某个数，并且将其放到适当的单元中，这个映射就称为&lt;strong>散列函数&lt;/strong>。&lt;br>
问题：选择一个函数，决定当两个键散列到同一个值的时候（称为**冲突(collision)**应该做什么以及如何确定散列表的大小。&lt;br>
&lt;em>注：一般使表的大小为素数，有助于避免部分冲突问题&lt;/em>&lt;/p>
&lt;h3 id="装填因子load-factor">装填因子(load factor)&lt;/h3>
&lt;p>定义散列表的装填因子 λ 为散列表中的元素个数与散列表大小的比值。&lt;/p>
&lt;h2 id="分离链接法">分离链接法&lt;/h2>
&lt;p>将散列到同一个值的所有元素保留到一个链表中。&lt;br>
一般法则：使 λ ≈ 1，控制链表的长度，若 λ &amp;gt; 1 则通过再散列扩充&lt;/p>
&lt;h2 id="开放定址法">开放定址法&lt;/h2>
&lt;p>不用链表存储，实现分配较大空间，称为&lt;strong>探测散列表&lt;/strong>&lt;br>
hi(x) = (hash(x) + f(i)) mod TableSize, f(0) = 0.&lt;br>
一般 λ &amp;gt; 0.5 就要再散列&lt;/p>
&lt;ul>
&lt;li>线性探测 f(i) = i&lt;/li>
&lt;li>平方探测 f(i) = i^2&lt;/li>
&lt;li>双散列 f(i) = i * hash2(x), hash2(x) = R - (x mod R) 这样的函数会起作用，其中R为小于TableSize的素数&lt;/li>
&lt;/ul>
&lt;h2 id="再散列rehash">再散列(rehash)&lt;/h2>
&lt;ol>
&lt;li>只要表到一半就再散列&lt;/li>
&lt;li>只有插入失败时才再散列&lt;/li>
&lt;li>途中策略：当表到达某一个装填因子时进行再散列（最优）&lt;/li>
&lt;/ol></description></item></channel></rss>